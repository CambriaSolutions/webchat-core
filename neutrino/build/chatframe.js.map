{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 7a2e839ca149f5846d49","webpack:///external \"react\"","webpack:///./src/components/chatframe/actions/dialogflow.js","webpack:///./src/components/chatframe/actions/conversation.js","webpack:///./src/components/chatframe/actions/initialization.js","webpack:///./src/components/chatframe/ChatWindow.js","webpack:///./src/components/chatframe/actions/userInput.js","webpack:///./src/components/chatframe/actions/actionTypes.js","webpack:///./src/components/chatframe/config/dateFormats.js","webpack:///./src/components/chatframe/conversationClient.js","webpack:///./src/components/chatframe/ActivatorButton.js","webpack:///./src/components/chatframe/Header.js","webpack:///./src/components/chatframe/Avatar.js","webpack:///./src/components/chatframe/Loading.js","webpack:///./src/components/chatframe/Message.js","webpack:///./src/components/chatframe/CardResponse.js","webpack:///./src/components/chatframe/UserInput.js","webpack:///./src/components/chatframe/ButtonBar.js","webpack:///./src/components/chatframe/ErrorBar.js","webpack:///./src/components/chatframe/styles/media.js","webpack:///./src/components/chatframe/ChatContainer.js","webpack:///./src/components/chatframe/reducers/configReducer.js","webpack:///./src/components/chatframe/reducers/conversationReducer.js","webpack:///./src/components/chatframe/reducers/buttonBarReducer.js","webpack:///./src/components/chatframe/reducers/errorReducer.js","webpack:///./src/components/chatframe/reducers/rootReducer.js","webpack:///./src/components/chatframe/reducers/userInputReducer.js","webpack:///./src/components/chatframe/ChatFrame.js","webpack:///./src/components/chatframe/index.js","webpack:///external \"webfontloader\""],"names":["client","dispatch","getState","response","error","rawResponses","get","responses","msg","type","mapMessageTypeToDescriptor","suggestions","text","card","title","subtitle","imageUrl","buttons","payload","webhookPayload","Object","field","data","JSON","systemTime","format","timestamp","getTime","entity","messageId","language","hasSuggestion","find","numMessages","clientName","sendEvent","timer","clearInterval","newTimer","setInterval","primaryColor","secondaryColor","newTheme","palette","contrastThreshold","tonalOffset","main","console","theme","createMuiTheme","userMessages","conversationElements","message","element","subMessage","sysTime","parse","elements","addMilliseconds","key","botMessages","userInput","saveUserInput","SET_TITLE","SET_AVATAR","SAVE_CLIENT","SAVE_RESPONSE","SAVE_USER_INPUT","SAVE_USER_RESPONSE","INITIATE_LOADING","TIMER_START","UPDATE_CURRENT_TIME","SHOW_BUTTON_BAR","HIDE_BUTTON_BAR","DISPLAY_ERROR","CLEAR_ERROR","CREATE_THEME","SHOW_WINDOW","HIDE_WINDOW","FULLSCREEN","WINDOWED","RECEIVE_WEBHOOK_DATA","sysTimeFormat","constructor","options","textRequest","url","params","query","eventRequest","Btn","styled","Button","p","dark","render","windowVisible","connect","state","showWindow","Container","Paper","HeaderImage","div","HeaderText","PrimaryHeaderText","SecondaryHeaderText","HeaderButton","fullscreen","hideWindow","showFullscreen","showWindowed","avatar","grey","Dot","green","ChatBubble","ExternalMessage","UserMessage","Timestamp","now","then","diffMinutes","differenceInMinutes","diffSeconds","differenceInSeconds","formattedTimestamp","chatMessage","isLoading","currentTime","CardContainer","Card","CardImage","CardMedia","b","inputValue","e","submitUserInput","MessagesContainer","React","componentDidUpdate","messageElements","dateA","a","dateB","diff","differenceInMilliseconds","m","messages","OuterFrame","SendButton","TextInput","input","handleKeyPress","fade","lastMessageWithSuggestions","hasSuggestions","suggestionElements","id","visible","btn","sendQuickReply","label","light","sizes","giant","desktop","tablet","phone","media","emSize","accumulator","css","defaultTheme","primary","blue","secondary","pink","initialState","lastUpdateTime","headerTime","rootReducer","action","lastUpdate","newMessage","newArray","WebFont","google","families","OuterContainer","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","componentDidMount","initialize","componentWillUnmount","select","handleChange","previousValue","store","ChatFrame"],"mappings":"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","file":"chatframe.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"chatframe\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chatframe\"] = factory();\n\telse\n\t\troot[\"chatframe\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7a2e839ca149f5846d49","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0","import {\n  SAVE_CLIENT,\n  SAVE_RESPONSE,\n  INITIATE_LOADING,\n  SHOW_BUTTON_BAR,\n  HIDE_BUTTON_BAR,\n  DISPLAY_ERROR,\n  CLEAR_ERROR,\n  RECEIVE_WEBHOOK_DATA,\n} from './actionTypes'\nimport get from 'lodash/get'\nimport find from 'lodash/find'\nimport { format, getTime } from 'date-fns'\n\n// Date Format\nimport { sysTimeFormat } from '../config/dateFormats'\n\nimport { Client } from '../conversationClient'\n\nexport function setupDialogflow(clientOptions) {\n  return (dispatch, getState) => {\n    const client = new Client(clientOptions)\n    const clientName = 'dialogflow'\n    dispatch({ type: SAVE_CLIENT, client, clientName })\n  }\n}\n\nexport function sendMessageWithDialogflow(message) {\n  return (dispatch, getState) => {\n    const client = getState().conversation.client\n    dispatch({ type: INITIATE_LOADING })\n    client\n      .textRequest(message)\n      .then(response => {\n        if (response) {\n          dispatch(getMessageFromDialogflow(response))\n          dispatch({ type: CLEAR_ERROR })\n        } else {\n          dispatch({\n            type: DISPLAY_ERROR,\n            error: 'No response received from chat provider. Please try again.',\n          })\n        }\n      })\n      .catch(error => {\n        dispatch({\n          type: DISPLAY_ERROR,\n          error: 'Unable to connect to the chat provider. Please try again.',\n        })\n        throw new Error(error)\n      })\n  }\n}\n\nexport function sendEvent(event) {\n  return (dispatch, getState) => {\n    const client = getState().conversation.client\n    dispatch({ type: INITIATE_LOADING })\n    client\n      .eventRequest(event)\n      .then(response => {\n        if (response) {\n          dispatch(getMessageFromDialogflow(response))\n          dispatch({ type: CLEAR_ERROR })\n        } else {\n          dispatch({\n            type: DISPLAY_ERROR,\n            error: 'No response received from chat provider. Please try again.',\n          })\n        }\n      })\n      .catch(error => {\n        dispatch({\n          type: DISPLAY_ERROR,\n          error: 'Unable to connect to the chat provider. Please try again.',\n        })\n        throw new Error(error)\n      })\n  }\n}\n\nexport function getMessageFromDialogflow(response) {\n  return (dispatch, getState) => {\n    const rawResponses = get(response, 'queryResult.fulfillmentMessages', {})\n    const responses = rawResponses.map(msg => {\n      const type = mapMessageTypeToDescriptor(msg.message)\n      return {\n        type: type,\n        suggestions: get(msg, 'quickReplies.quickReplies', []),\n        text: get(msg, 'text.text', null),\n        card: {\n          title: get(msg, 'title', ''),\n          subtitle: get(msg, 'subtitle', ''),\n          imageUrl: get(msg, 'imageUrl', ''),\n          buttons: get(msg, 'buttons', []),\n        },\n        payload: get(msg, 'payload', {}),\n      }\n    })\n\n    const webhookPayload = get(\n      response,\n      'queryResult.webhookPayload.fields',\n      null\n    )\n\n    // If there is a webhookPayload, parse it to avoid nesting and stringified JSON\n    if (webhookPayload) {\n      for (let [field, data] of Object.entries(webhookPayload)) {\n        if (data.kind === 'stringValue') {\n          webhookPayload[field] = JSON.parse(data.stringValue)\n        }\n      }\n\n      dispatch({ type: RECEIVE_WEBHOOK_DATA, webhookPayload })\n    }\n\n    const systemTime = format(new Date(), sysTimeFormat)\n    const timestamp = getTime(new Date())\n\n    const data = {\n      entity: 'bot',\n      loading: false,\n      messageId: response.responseId,\n      language: response.queryResult.languageCode,\n      timestamp: timestamp,\n      systemTime: systemTime,\n      providerResponse: response,\n      responses: responses,\n    }\n\n    dispatch(saveResponse(data))\n  }\n}\n\nexport function saveResponse(data) {\n  return (dispatch, getState) => {\n    const hasSuggestion = find(data.responses, ['type', 'suggestion'])\n      ? true\n      : false\n    if (hasSuggestion) {\n      dispatch({ type: SHOW_BUTTON_BAR })\n    } else {\n      dispatch({ type: HIDE_BUTTON_BAR })\n    }\n\n    dispatch({ type: SAVE_RESPONSE, data })\n  }\n}\n\nfunction mapMessageTypeToDescriptor(type) {\n  switch (type) {\n    case 'text':\n      return 'text'\n    case 'card':\n      return 'card'\n    case 'quickReplies':\n      return 'suggestion'\n    case 'image':\n      return 'image'\n    case 4:\n      return 'payload'\n    default:\n      return 'text'\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/actions/dialogflow.js","import { format } from 'date-fns'\nimport {\n  SAVE_USER_RESPONSE,\n  DISPLAY_ERROR,\n  HIDE_BUTTON_BAR,\n} from './actionTypes'\nimport { setupDialogflow, sendMessageWithDialogflow } from './dialogflow'\n// Date Format\nimport { sysTimeFormat } from '../config/dateFormats'\n\nexport function setupClient(client, clientOptions) {\n  return (dispatch, getState) => {\n    if (!client) {\n      throw new Error('No coversation provider selected.')\n    }\n\n    // Setup Dialogflow\n    if (client.toLowerCase() === 'dialogflow') {\n      dispatch(setupDialogflow(clientOptions))\n    } else {\n      // Unrecognized client\n      dispatch({ type: DISPLAY_ERROR, error: `Unable to connect to ${client}` })\n      throw new Error(`${client} is not a recognized conversation provider.`)\n    }\n  }\n}\n\nexport function createUserResponse(text) {\n  return (dispatch, getState) => {\n    const numMessages = getState().conversation.messages.length\n    const systemTime = format(new Date(), sysTimeFormat)\n    const response = {\n      entity: 'user',\n      messageId: `usermessage-${numMessages}`,\n      systemTime: systemTime,\n      text: text,\n    }\n    dispatch({ type: SAVE_USER_RESPONSE, response })\n    dispatch(sendMessage(text))\n  }\n}\n\nexport function sendMessage(message) {\n  return (dispatch, getState) => {\n    const clientName = getState().conversation.clientName\n    if (clientName.toLowerCase() === 'dialogflow') {\n      dispatch({ type: HIDE_BUTTON_BAR })\n      dispatch(sendMessageWithDialogflow(message))\n    } else {\n      // Unrecognized client\n      dispatch({\n        type: DISPLAY_ERROR,\n        error: `Unable to connect to ${clientName}`,\n      })\n      throw new Error(\n        `${clientName} is not a recognized conversation provider.`\n      )\n    }\n  }\n}\n\nexport function sendQuickReply(text) {\n  return (dispatch, getState) => {\n    dispatch(createUserResponse(text))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/actions/conversation.js","import {\n  SET_TITLE,\n  SET_AVATAR,\n  TIMER_START,\n  UPDATE_CURRENT_TIME,\n  CREATE_THEME,\n  SHOW_WINDOW,\n  HIDE_WINDOW,\n  FULLSCREEN,\n  WINDOWED,\n} from './actionTypes'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { setupClient } from './conversation'\nimport { sendEvent } from './dialogflow'\nimport * as colors from '@material-ui/core/colors'\nimport isHexColor from 'validator/lib/isHexColor';\n\nexport function initialize(props) {\n  return (dispatch, getState) => {\n    const {\n      title,\n      avatar,\n      client,\n      clientOptions,\n      token,\n      primaryColor,\n      secondaryColor,\n      initialActive,\n      fullscreen,\n    } = props\n    dispatch({ type: SET_TITLE, title })\n    dispatch({ type: SET_AVATAR, avatar })\n    dispatch(setupClient(client, clientOptions))\n    dispatch(startTimer())\n    dispatch(sendEvent('Welcome'))\n\n    if (primaryColor || secondaryColor) {\n      dispatch(createTheme(primaryColor, secondaryColor))\n    }\n\n    if (initialActive === true) {\n      dispatch(showWindow())\n    } else {\n      dispatch(hideWindow())\n    }\n\n    if (fullscreen === true) {\n      dispatch(showFullscreen())\n    } else {\n      dispatch(showWindowed())\n    }\n  }\n}\n\nexport function startTimer() {\n  return (dispatch, getState) => {\n    const timer = getState().conversation.timer\n    // If there's an existing timer, clear it\n    if (timer) {\n      clearInterval(timer)\n    }\n    // Create a new timer to tick every 10 seconds\n    const newTimer = setInterval(() => dispatch(updateIdleTime()), 1000 * 10)\n    // Save the new timer\n    dispatch({ type: TIMER_START, newTimer })\n    // Dispatch the first tick\n    dispatch(updateIdleTime())\n  }\n}\n\nfunction updateIdleTime() {\n  return { type: UPDATE_CURRENT_TIME }\n}\n\n// Create a color theme to be used by the rest of the chat window. If the user\n// defines a color that isn't available, fall back to default colors and\n// warn user\nfunction createTheme(primaryColor = 'lightBlue', secondaryColor = 'pink') {\n  return (dispatch, getState) => {\n    let newTheme = {\n      palette: {\n        error: colors['red'],\n        // Used by `getContrastText()` to maximize the contrast between the background and\n        // the text.\n        contrastThreshold: 3,\n        // Used to shift a color's luminance by approximately\n        // two indexes within its tonal palette.\n        // E.g., shift from Red 500 to Red 300 or Red 700.\n        tonalOffset: 0.2,\n      },\n    }\n    if (isHexColor(primaryColor)) {\n      newTheme.palette.primary = {\n        main: primaryColor\n      }\n    }\n    else if (colors[primaryColor]) {\n      newTheme.palette.primary = colors[primaryColor]\n    } else {\n      console.error(\n        `${primaryColor} is not a valid color. Use a color name from https://material.io/guidelines/style/color.html#color-color-palette`\n      )\n    }\n\n    if (isHexColor(secondaryColor)) {\n      newTheme.palette.secondary = {\n        main: secondaryColor\n      }\n    }\n    else if (secondaryColor && colors[secondaryColor]) {\n      newTheme.palette.secondary = colors[secondaryColor]\n    } else {\n      console.error(\n        `${secondaryColor} is not a valid color. Use a color name from https://material.io/guidelines/style/color.html#color-color-palette`\n      )\n    }\n    const theme = createMuiTheme(newTheme)\n    dispatch({ type: CREATE_THEME, theme })\n  }\n}\n\nexport function showWindow() {\n  return { type: SHOW_WINDOW }\n}\nexport function hideWindow() {\n  return { type: HIDE_WINDOW }\n}\nexport function showFullscreen() {\n  return { type: FULLSCREEN }\n}\nexport function showWindowed() {\n  return { type: WINDOWED }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/actions/initialization.js","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport filter from 'lodash/filter'\n\n// Components\nimport Message from './Message'\nimport CardResponse from './CardResponse'\n\n// Date Format\nimport { sysTimeFormat } from './config/dateFormats'\nimport {\n  parse,\n  format,\n  addMilliseconds,\n  differenceInMilliseconds,\n} from 'date-fns'\n\nconst Container = styled.div`\n  /* box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12); */\n  position: relative;\n  padding: 0 16px 16px 16px;\n  overflow-y: auto;\n  height: 100%;\n  background: ${p => p.theme.palette.grey[200]};\n  display: flex;\n  flex-direction: column-reverse;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n`\n\nconst MessagesContainer = styled.div`\n  flex: 1 0 auto;\n  min-height: min-content;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-end;\n  min-height: 100%;\n  height: auto;\n`\n\nfunction buildUserMessages(messages) {\n  const userMessages = filter(messages, ['entity', 'user'])\n  const conversationElements = []\n  for (let message of userMessages) {\n    conversationElements.push({\n      systemTime: message.systemTime,\n      element: (\n        <Message\n          message={message.text}\n          entity={message.entity}\n          key={message.messageId}\n          timestamp={message.systemTime}\n        />\n      ),\n    })\n  }\n  return conversationElements\n}\n\nfunction buildLoadingMessage(message) {\n  return {\n    systemTime: message.systemTime,\n    element: (\n      <Message\n        key=\"loading\"\n        entity=\"bot\"\n        timestamp={message.systemTime}\n        isLoading={message.loading + format(new Date(), sysTimeFormat)}\n      />\n    ),\n  }\n}\n\nfunction buildTextMessages(message) {\n  const elements = []\n  for (let key in message.responses) {\n    const subMessage = message.responses[key]\n    if (subMessage.type === 'text') {\n      // We add key*10 milliseconds to each text message to ensure that they\n      // display in the correct order. They arrive in the same response from\n      // the provider, which has a single timestamp for all subMessages. This\n      // allows them to be differentiated and sorted.\n      const sysTime = parse(\n        message.systemTime,\n        sysTimeFormat,\n        new Date(message.systemTime)\n      )\n      elements.push({\n        systemTime: format(addMilliseconds(sysTime, key * 10), sysTimeFormat),\n        element: (\n          <Message\n            message={subMessage.text}\n            entity={message.entity}\n            key={message.messageId + key + format(new Date(), sysTimeFormat)}\n            isLoading={false}\n            timestamp={message.systemTime}\n          />\n        ),\n      })\n    }\n  }\n  return elements\n}\n\nfunction buildCardMessages(message) {\n  const elements = []\n  for (let key in message.responses) {\n    const subMessage = message.responses[key]\n    if (subMessage.type === 'card') {\n      elements.push({\n        systemTime: message.systemTime,\n        element: (\n          <CardResponse\n            data={subMessage.card}\n            timestamp={message.systemTime}\n            key={message.messageId + key + format(new Date(), sysTimeFormat)}\n          />\n        ),\n      })\n    }\n  }\n  return elements\n}\n\nfunction buildBotMessages(messages) {\n  const botMessages = filter(messages, ['entity', 'bot'])\n  let conversationElements = []\n\n  for (let message of botMessages) {\n    // Loading message\n    if (message.loading) {\n      conversationElements.push(buildLoadingMessage(message))\n    } else {\n      conversationElements = [\n        ...conversationElements,\n        ...buildTextMessages(message),\n        ...buildCardMessages(message),\n      ]\n    }\n  }\n  return conversationElements\n}\n\nclass ChatWindow extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.chatWindowRef = React.createRef()\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const chatWindowNode = this.chatWindowRef.current\n    // chatWindowNode.scrollTop = chatWindowNode.scrollHeight\n  }\n  render() {\n    const { messages, theme } = this.props\n    const botMessages = buildBotMessages(messages)\n    const userMessages = buildUserMessages(messages)\n    const messageElements = [...botMessages, ...userMessages]\n    // Sort all messages by systemTime\n    messageElements.sort((a, b) => {\n      const dateA = parse(a.systemTime, sysTimeFormat, new Date(a.systemTime))\n      const dateB = parse(b.systemTime, sysTimeFormat, new Date(a.systemTime))\n      const diff = differenceInMilliseconds(dateA, dateB)\n      return diff\n    })\n    const elements = messageElements.map(m => m.element)\n    return (\n      <Container\n        innerRef={this.chatWindowRef}\n        theme={theme}\n        elevation={1}\n        square\n      >\n        <MessagesContainer>{elements}</MessagesContainer>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.conversation.messages,\n    theme: state.config.theme,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {}\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChatWindow)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/ChatWindow.js","import { SAVE_USER_INPUT } from './actionTypes'\nimport { createUserResponse } from './conversation'\n\nexport function saveUserInput(value) {\n  return { type: SAVE_USER_INPUT, value }\n}\n\nexport function submitUserInput() {\n  return (dispatch, getState) => {\n    const userInput = getState().userInput\n    if (!userInput || userInput === '') {\n      return\n    }\n    dispatch(createUserResponse(userInput))\n    dispatch(saveUserInput(''))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/actions/userInput.js","export const SET_TITLE = 'SET_TITLE'\nexport const SET_AVATAR = 'SET_AVATAR'\nexport const SAVE_CLIENT = 'SAVE_CLIENT'\nexport const SAVE_RESPONSE = 'SAVE_RESPONSE'\nexport const SAVE_USER_INPUT = 'SAVE_USER_INPUT'\nexport const SAVE_USER_RESPONSE = 'SAVE_USER_RESPONSE'\nexport const INITIATE_LOADING = 'INITIATE_LOADING'\nexport const UPDATE_TIME = 'UPDATE_TIME'\nexport const TIMER_START = 'TIMER_START'\nexport const UPDATE_CURRENT_TIME = 'UPDATE_CURRENT_TIME'\nexport const SHOW_BUTTON_BAR = 'SHOW_BUTTON_BAR'\nexport const HIDE_BUTTON_BAR = 'HIDE_BUTTON_BAR'\nexport const DISPLAY_ERROR = 'DISPLAY_ERROR'\nexport const CLEAR_ERROR = 'CLEAR_ERROR'\nexport const CREATE_THEME = 'CREATE_THEME'\nexport const SHOW_WINDOW = 'SHOW_WINDOW'\nexport const HIDE_WINDOW = 'HIDE_WINDOW'\nexport const FULLSCREEN = 'FULLSCREEN'\nexport const WINDOWED = 'WINDOWED'\nexport const RECEIVE_WEBHOOK_DATA = 'RECEIVE_WEBHOOK_DATA'\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/actions/actionTypes.js","export const sysTimeFormat = 'MM-dd-yyyy hh:mm:ss.SSSa'\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/config/dateFormats.js","export class Client {\n  constructor(options) {\n    if (!options || !options.textUrl) {\n      throw new Error(\n        'Fulfillment URL is required to generate a conversation client'\n      )\n    }\n    this.textUrl = options.textUrl\n    this.eventUrl = options.eventUrl\n    this.apiKey = options.apiKey\n  }\n\n  textRequest(query) {\n    if (!query) {\n      throw new Error('Query should not be empty')\n    }\n\n    let url = new URL(this.textUrl)\n    const params = {\n      query: query,\n    }\n    if (this.apiKey) {\n      params['x-api-key'] = this.apiKey\n    }\n    Object.keys(params).forEach(key =>\n      url.searchParams.append(key, params[key])\n    )\n    return fetch(url).then(response => {\n      return response.json()\n    })\n  }\n\n  eventRequest(query) {\n    if (!query) {\n      throw new Error('Query should not be empty')\n    }\n\n    let url = new URL(this.eventUrl)\n    const params = {\n      query: query,\n    }\n    if (this.apiKey) {\n      params['x-api-key'] = this.apiKey\n    }\n    Object.keys(params).forEach(key =>\n      url.searchParams.append(key, params[key])\n    )\n    return fetch(url).then(response => {\n      return response.json()\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/conversationClient.js","import React, { PureComponent } from 'react'\nimport styled from 'styled-components'\nimport Button from '@material-ui/core/Button'\nimport Chat from '@material-ui/icons/Chat'\n\n// Redux\nimport { connect } from 'react-redux'\nimport { showWindow } from './actions/initialization'\n\nconst Btn = styled(Button)`\n  && {\n    display: ${p => (p.active ? 'block' : 'none')};\n    position: absolute;\n    bottom: 48px;\n    right: 48px;\n    pointer-events: auto;\n    padding-top: 8px;\n    background: ${p => p.theme.palette.primary.main};\n    color: ${p =>\n      p.theme.palette.getContrastText(p.theme.palette.primary.main)};\n    &:hover {\n      background: ${p => p.theme.palette.primary.dark};\n      color: ${p =>\n        p.theme.palette.getContrastText(p.theme.palette.primary.dark)};\n    }\n  }\n`\n\nclass ActivatorButton extends PureComponent {\n  render() {\n    const { windowVisible, showWindow, theme } = this.props\n    return (\n      <Btn\n        variant=\"fab\"\n        onClick={showWindow}\n        active={windowVisible ? 0 : 1}\n        theme={theme}\n      >\n        <Chat />\n      </Btn>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    windowVisible: state.config.windowVisible,\n    theme: state.config.theme,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showWindow: () => {\n      dispatch(showWindow())\n    },\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ActivatorButton)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/ActivatorButton.js","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport Paper from '@material-ui/core/Paper'\nimport Fullscreen from '@material-ui/icons/Fullscreen'\nimport FullscreenExit from '@material-ui/icons/FullscreenExit'\nimport Close from '@material-ui/icons/Close'\nimport Chat from '@material-ui/icons/Chat'\nimport styled from 'styled-components'\nimport {\n  hideWindow,\n  showFullscreen,\n  showWindowed,\n} from './actions/initialization'\n\nconst Container = styled(Paper)`\n  && {\n    background: ${p => p.theme.palette.primary.dark};\n    padding: 16px;\n    color: ${p =>\n      p.theme.palette.getContrastText(p.theme.palette.primary.dark)};\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n    border-bottom-left-radius: 0px;\n    border-bottom-right-radius: 0px;\n    position: relative;\n    z-index: 1;\n  }\n`\n\nconst HeaderImage = styled.div`\n  flex: 0;\n`\n\nconst HeaderText = styled.div`\n  flex: 1;\n`\n\nconst PrimaryHeaderText = styled.div`\n  font-size: 16px;\n  line-height: 16px;\n  padding-left: 16px;\n`\n\nconst SecondaryHeaderText = styled.div`\n  padding-top: 2px;\n  font-size: 10px;\n  line-height: 10px;\n  padding-left: 16px;\n`\n\nconst HeaderButton = styled.div`\n  flex: 0;\n  cursor: pointer;\n  height: 28px;\n  color: ${p => p.theme.palette.getContrastText(p.theme.palette.primary.dark)};\n  padding: 2px;\n  &:hover {\n    background: rgba(255, 255, 255, 0.24);\n  }\n`\n\nclass Header extends PureComponent {\n  render() {\n    const {\n      title,\n      timestamp,\n      theme,\n      hideWindow,\n      showWindowed,\n      showFullscreen,\n      fullscreen,\n    } = this.props\n    return (\n      <Container elevation={3} theme={theme}>\n        <HeaderImage>\n          <Chat />\n        </HeaderImage>\n        <HeaderText>\n          <PrimaryHeaderText>{title}</PrimaryHeaderText>\n          <SecondaryHeaderText>Active {timestamp}</SecondaryHeaderText>\n        </HeaderText>\n\n        {fullscreen ? (\n          <HeaderButton theme={theme} onClick={showWindowed}>\n            <FullscreenExit />\n          </HeaderButton>\n        ) : (\n          <HeaderButton theme={theme} onClick={showFullscreen}>\n            <Fullscreen />\n          </HeaderButton>\n        )}\n        <HeaderButton theme={theme} onClick={hideWindow}>\n          <Close />\n        </HeaderButton>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    title: state.config.title,\n    timestamp: state.conversation.headerTime,\n    theme: state.config.theme,\n    fullscreen: state.config.fullscreen,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    hideWindow: () => {\n      dispatch(hideWindow())\n    },\n    showFullscreen: () => {\n      dispatch(showFullscreen())\n    },\n    showWindowed: () => {\n      dispatch(showWindowed())\n    },\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/Header.js","import React, { PureComponent } from 'react'\nimport styled from 'styled-components'\nimport Paper from '@material-ui/core/Paper'\n\n// Colors\nimport grey from '@material-ui/core/colors/grey'\n\nconst Container = styled(Paper)`\n  && {\n    ${p => (p.entity === 'user' ? 'display: none;' : '')} height: 36px;\n    width: 42px;\n    height: 42px;\n    min-width: 42px;\n    border-radius: 50%;\n    margin: ${p => (p.entity === 'user' ? '0 0 0 16px' : '0 16px 0 0')};\n    order: ${p => (p.entity === 'user' ? 1 : 0)};\n    background-color: #fff;\n    background-image: ${p => (p.avatar ? `url(${p.avatar})` : grey['400'])};\n    background-position: center;\n    background-size: 80%;\n    background-repeat: no-repeat;\n  }\n`\n\nclass Avatar extends PureComponent {\n  render() {\n    const { entity, avatar } = this.props\n    return <Container entity={entity} avatar={avatar} />\n  }\n}\n\nexport default Avatar\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/Avatar.js","import React, { PureComponent } from 'react'\nimport styled from 'styled-components'\n\n// Colors\nimport green from '@material-ui/core/colors/green'\n\nconst Container = styled.div`\n  text-align: center;\n  width: 42px;\n  height: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-around;\n  align-items: center;\n`\n\nconst Dot = styled.div`\n  animation: dot-keyframes 1s infinite ease-in-out;\n  background-color: ${green[900]};\n  border-radius: 10px;\n  display: inline-block;\n  height: 8px;\n  width: 8px;\n\n  &:nth-child(2) {\n    animation-delay: 0.25s;\n  }\n\n  &:nth-child(3) {\n    animation-delay: 0.5s;\n  }\n\n  @keyframes dot-keyframes {\n    0% {\n      opacity: 0.4;\n      transform: scale(1, 1);\n    }\n\n    50% {\n      opacity: 1;\n      transform: scale(1.3, 1.3);\n    }\n\n    100% {\n      opacity: 0.4;\n      transform: scale(1, 1);\n    }\n  }\n`\n\nclass Loading extends PureComponent {\n  render() {\n    return (\n      <Container>\n        <Dot />\n        <Dot />\n        <Dot />\n      </Container>\n    )\n  }\n}\n\nexport default Loading\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/Loading.js","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { parse, differenceInMinutes, differenceInSeconds } from 'date-fns'\nimport Paper from '@material-ui/core/Paper'\n// Components\nimport Avatar from './Avatar'\nimport Loading from './Loading'\n// Colors\nimport grey from '@material-ui/core/colors/grey'\n// Date Format\nimport { sysTimeFormat } from './config/dateFormats'\n\nconst Container = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  margin-top: 24px;\n  min-height: 32px;\n  align-items: ${p => (p.entity === 'user' ? 'flex-end' : 'flex-start')};\n`\n\nconst ChatBubble = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: ${p => (p.entity === 'user' ? 'flex-end' : 'flex-start')};\n`\n\nconst ExternalMessage = styled(Paper)`\n  && {\n    background: #fff;\n    border-radius: 3px;\n    font-size: 16px;\n    line-height: 1.2rem;\n    padding: 12px;\n    position: relative;\n    color: ${grey[900]};\n    max-width: 85%;\n\n    &:after {\n      content: '\\\\00a0';\n      height: 10px;\n      width: 10px;\n      position: absolute;\n      transform: rotate(-45deg);\n      top: 16px;\n      left: -6px;\n      background-color: #fff;\n      border-top: 1px solid ${grey[400]};\n      border-left: 1px solid ${grey[400]};\n    }\n  }\n`\n\nconst UserMessage = styled(Paper)`\n  && {\n    background-color: ${grey[400]};\n    border-radius: 3px;\n    font-size: 16px;\n    line-height: 1.2rem;\n    padding: 12px;\n    width: auto;\n    position: relative;\n    color: ${grey[900]};\n    max-width: 85%;\n\n    &:after {\n      height: 10px;\n      width: 10px;\n      position: absolute;\n      transform: rotate(-45deg);\n      top: 16px;\n      right: -6px;\n      background-color: ${grey[400]};\n      border-bottom: 1px solid ${grey[300]};\n      border-right: 1px solid ${grey[300]};\n    }\n  }\n`\n\nconst Timestamp = styled.div`\n  font-size: 12px;\n  color: ${grey[500]};\n  margin-top: 8px;\n  padding-left: 62px;\n  padding-right: 2px;\n`\n\nclass Message extends PureComponent {\n  render() {\n    const {\n      message,\n      entity,\n      avatar,\n      isLoading,\n      timestamp,\n      currentTime,\n    } = this.props\n\n    const now = parse(currentTime, sysTimeFormat, new Date(currentTime))\n    const then = parse(timestamp, sysTimeFormat, new Date(currentTime))\n    const diffMinutes = differenceInMinutes(now, then)\n    const diffSeconds = differenceInSeconds(now, then)\n    let formattedTimestamp = null\n    if (diffMinutes >= 1) {\n      formattedTimestamp = `${diffMinutes} min`\n    } else if (diffSeconds >= 10) {\n      formattedTimestamp = `${diffSeconds} sec`\n    } else {\n      formattedTimestamp = 'Now'\n    }\n\n    const chatMessage =\n      entity === 'user' ? (\n        <UserMessage elevation={1}>{message}</UserMessage>\n      ) : (\n        <ExternalMessage elevation={1}>\n          {isLoading ? <Loading /> : message}\n        </ExternalMessage>\n      )\n    return (\n      <Container entity={entity}>\n        <ChatBubble entity={entity}>\n          <Avatar entity={entity} avatar={avatar} />\n          {chatMessage}\n        </ChatBubble>\n        <Timestamp>{formattedTimestamp}</Timestamp>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    avatar: state.config.avatar,\n    currentTime: state.conversation.currentTime,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {}\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Message)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/Message.js","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\nconst CardContainer = styled(Card)`\n  && {\n    margin: 16px auto;\n    white-space: pre-line;\n  }\n`\n\nconst CardImage = styled(CardMedia)`\n  && {\n    height: ${p => (p.image && p.image !== '' ? '200px' : '0px')};\n    background-size: cover;\n    background-position: center center;\n  }\n`\n\nclass CardResponse extends PureComponent {\n  render() {\n    const { title, subtitle, imageUrl, buttons } = this.props.data\n    return (\n      <CardContainer>\n        <CardImage image={encodeURI(imageUrl)} title=\"\" />\n        <CardContent>\n          <Typography gutterBottom variant=\"headline\" component=\"h2\">\n            {title}\n          </Typography>\n          <Typography component=\"p\">{subtitle}</Typography>\n        </CardContent>\n        <CardActions>\n          {buttons.map((b, index) => {\n            return (\n              <Button\n                href={b.postback}\n                target=\"_blank\"\n                size=\"small\"\n                color=\"primary\"\n                key={'card-' + index + format(new date(), 'MMDDYYYYhhmmssSSS')}\n              >\n                {b.text}\n              </Button>\n            )\n          })}\n        </CardActions>\n      </CardContainer>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inputValue: state.userInput,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveUserInput: e => {},\n    submitUserInput: () => {},\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CardResponse)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/CardResponse.js","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport Send from '@material-ui/icons/Send'\nimport styled from 'styled-components'\n\n// Redux\nimport { saveUserInput, submitUserInput } from './actions/userInput'\n\nconst OuterFrame = styled.div`\n  background: #fff;\n  flex: 1 0 48px;\n  max-height: 48px;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n  box-shadow: 0px -1px 3px 0px rgba(0, 0, 0, 0.23);\n`\nconst SendButton = styled.div`\n  flex: 0;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  color: ${p => p.theme.palette.primary.dark};\n  padding: 0 16px;\n  cursor: pointer;\n  &:hover {\n    color: ${p => p.theme.palette.primary.dark};\n  }\n`\n\nconst TextInput = styled.input`\n  width: 100%;\n  height: 100%;\n  font-size: 16px;\n  line-height: 16px;\n  outline: none;\n  border: none;\n  padding: 0 16px;\n`\n\nclass UserInput extends PureComponent {\n  constructor() {\n    super()\n    this.handleKeyPress = this.handleKeyPress.bind(this)\n  }\n\n  handleKeyPress(e) {\n    // Enter was pressed\n    if (e.charCode === 13) {\n      this.props.submitUserInput()\n    }\n  }\n\n  render() {\n    const { saveUserInput, inputValue, theme } = this.props\n    return (\n      <OuterFrame>\n        <TextInput\n          type=\"text\"\n          placeholder=\"Send a message\"\n          onChange={saveUserInput}\n          value={inputValue}\n          onKeyPress={this.handleKeyPress}\n        />\n        <SendButton onClick={this.props.submitUserInput} theme={theme}>\n          <Send />\n        </SendButton>\n      </OuterFrame>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inputValue: state.userInput,\n    theme: state.config.theme,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveUserInput: e => {\n      dispatch(saveUserInput(e.target.value))\n    },\n    submitUserInput: () => {\n      dispatch(submitUserInput())\n    },\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserInput)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/UserInput.js","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport Button from '@material-ui/core/Button'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport findLast from 'lodash/findLast'\nimport find from 'lodash/find'\nimport { sendQuickReply } from './actions/conversation'\n\nconst Container = styled.div`\n  width: 100%;\n  flex: 1 0 auto;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: flex-start;\n  align-items: center;\n  align-content: center;\n  padding: ${p => (p.visible ? '8px 8px' : '0 8px')};\n  background: ${p => p.theme.palette.grey[100]};\n`\n\nconst Btn = styled(Button)`\n  && {\n    border-color: ${p => p.theme.palette.secondary.main};\n    color: ${p => p.theme.palette.secondary.main};\n    margin: 8px;\n    display: ${p => (p.visible === 'true' ? 'block' : 'none')};\n    &:hover {\n      /* background: ${p => p.theme.palette.secondary.dark}; */\n      background-color: ${p =>\n        fade(\n          p.theme.palette.secondary.main,\n          p.theme.palette.action.hoverOpacity\n        )};\n\n    border-color: ${p => p.theme.palette.secondary.main};\n    }\n  }\n`\n\nclass ButtonBar extends PureComponent {\n  render() {\n    const { visible, messages, sendQuickReply, theme } = this.props\n    const lastMessageWithSuggestions = findLast(messages, m => {\n      const hasSuggestions = find(m.responses, ['type', 'suggestion'])\n        ? true\n        : false\n      return hasSuggestions\n    })\n\n    let suggestionElements = []\n    if (lastMessageWithSuggestions) {\n      const messages = lastMessageWithSuggestions.responses.filter(m => {\n        return m.type === 'suggestion'\n      })\n      for (let message of messages) {\n        for (let suggestion of message.suggestions) {\n          suggestionElements.push({\n            label: suggestion,\n            id: lastMessageWithSuggestions.messageId,\n            visible: visible,\n          })\n        }\n      }\n    }\n\n    return (\n      <Container visible={visible} theme={theme}>\n        {suggestionElements.map((btn, index) => (\n          <Btn\n            size=\"small\"\n            theme={theme}\n            variant=\"outlined\"\n            color=\"secondary\"\n            key={`${btn.id}-btn${index}`}\n            visible={btn.visible.toString()}\n            onClick={() => sendQuickReply(btn.label)}\n          >\n            {btn.label}\n          </Btn>\n        ))}\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    visible: state.buttonBar.visible,\n    messages: state.conversation.messages,\n    theme: state.config.theme,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendQuickReply: text => {\n      dispatch(sendQuickReply(text))\n    },\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ButtonBar)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/ButtonBar.js","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  align-items: center;\n  padding: ${p => (p.visible ? '24px 16px' : '0 16px')};\n  background: ${p => p.theme.palette.error.light};\n  border-top: ${p =>\n    p.visible ? `1px solid ${p.theme.palette.error.main}` : 'none'};\n  color: ${p => p.theme.palette.error.dark};\n`\n\nclass ErrorBar extends PureComponent {\n  render() {\n    const { error, theme } = this.props\n    return (\n      <Container visible={error !== ''} theme={theme}>\n        {error}\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error,\n    theme: state.config.theme\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorBar)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/ErrorBar.js","import { css } from 'styled-components'\n\nconst sizes = {\n  giant: 1170,\n  desktop: 992,\n  tablet: 768,\n  phone: 620\n}\n\n// iterate through the sizes and create a media template\nexport const media = Object.keys(sizes).reduce((accumulator, label) => {\n  // use em in breakpoints to work properly cross-browser and support users\n  // changing their browsers font-size: https://zellwk.com/blog/media-query-units/\n  const emSize = sizes[label] / 16\n  accumulator[label] = (...args) => css`\n    @media (max-width: ${emSize}em) {\n      ${css(...args)};\n    }\n  `\n  return accumulator\n}, {})\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/styles/media.js","import React, { PureComponent } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport styled from 'styled-components'\n\nimport Zoom from '@material-ui/core/Zoom'\n// Components\nimport Header from './Header'\nimport ChatWindow from './ChatWindow'\nimport UserInput from './UserInput'\nimport ButtonBar from './ButtonBar'\nimport ErrorBar from './ErrorBar'\n\n// Redux\nimport { connect } from 'react-redux'\n\nimport { media } from './styles/media'\n\nconst OuterFrame = styled(Paper)`\n  && {\n    transform-origin: bottom right;\n    pointer-events: auto;\n    width: ${p => (p.fullscreen ? 'calc(100% - 96px)' : '65%')};\n    height: ${p => (p.fullscreen ? 'calc(100% - 96px)' : '60%')};\n    max-width: ${p => (p.fullscreen ? '' : '700px')};\n    max-height: ${p => (p.fullscreen ? '' : '1000px')};\n    background: none;\n    display: flex;\n    flex-flow: column nowrap;\n    overflow: hidden;\n    position: absolute;\n    bottom: 48px;\n    right: 48px;\n\n    ${media.phone`\n      width: calc(100% - 48px);\n      height: calc(100% - 48px);\n      position: absolute;\n      top: 24px;\n      left: 24px;\n      max-width: none;\n      max-height: none;\n    `};\n  }\n`\n\nclass ChatContainer extends PureComponent {\n  render() {\n    const { windowVisible, fullscreen } = this.props\n    return (\n      <Zoom in={windowVisible}>\n        <OuterFrame elevation={6} fullscreen={fullscreen ? 1 : 0}>\n          <Header />\n          <ChatWindow />\n          <ButtonBar />\n          <ErrorBar />\n          <UserInput />\n        </OuterFrame>\n      </Zoom>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    windowVisible: state.config.windowVisible,\n    fullscreen: state.config.fullscreen,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {}\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChatContainer)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/ChatContainer.js","import * as t from '../actions/actionTypes'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\n// Colors\nimport pink from '@material-ui/core/colors/pink'\nimport blue from '@material-ui/core/colors/blue'\n\nconst defaultTheme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: pink,\n  },\n})\n\nconst initialState = {\n  avatar: null,\n  title: 'Chat Window',\n  theme: defaultTheme,\n  windowVisible: false,\n  fullscreen: false,\n}\nfunction config(state = initialState, action) {\n  switch (action.type) {\n    case t.SET_AVATAR:\n      if (action.avatar) {\n        return { ...state, avatar: action.avatar }\n      } else {\n        return state\n      }\n\n    case t.SET_TITLE:\n      return { ...state, title: action.title }\n\n    case t.CREATE_THEME:\n      return { ...state, theme: action.theme }\n\n    case t.SHOW_WINDOW:\n      return { ...state, windowVisible: true }\n\n    case t.HIDE_WINDOW:\n      return { ...state, windowVisible: false }\n\n    case t.FULLSCREEN:\n      return { ...state, fullscreen: true }\n\n    case t.WINDOWED:\n      return { ...state, fullscreen: false }\n\n    default:\n      return state\n  }\n}\n\nexport default config\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/reducers/configReducer.js","import * as t from '../actions/actionTypes'\nimport {\n  parse,\n  format,\n  differenceInMinutes,\n  differenceInSeconds,\n  differenceInMilliseconds,\n} from 'date-fns'\nimport { sysTimeFormat } from '../config/dateFormats'\n\nconst initialState = {\n  client: null,\n  clientName: null,\n  messages: [],\n  webhookPayload: null,\n  lastUpdateTime: format(new Date(), sysTimeFormat),\n  currentTime: format(new Date(), sysTimeFormat),\n  headerTime: 'Now',\n  timer: null,\n}\nfunction conversation(state = initialState, action) {\n  switch (action.type) {\n    case t.SAVE_CLIENT:\n      return { ...state, client: action.client, clientName: action.clientName }\n\n    case t.UPDATE_CURRENT_TIME:\n      const now = new Date()\n      const lastUpdate = parse(\n        state.lastUpdateTime,\n        sysTimeFormat,\n        new Date(state.lastUpdateTime)\n      )\n      const diffMinutes = differenceInMinutes(now, lastUpdate)\n      const diffSeconds = differenceInSeconds(now, lastUpdate)\n      let headerTime = 'Now'\n      if (diffMinutes >= 1) {\n        headerTime = `${diffMinutes} min ago`\n      } else if (diffSeconds >= 9) {\n        headerTime = `${diffSeconds} sec ago`\n      }\n\n      return {\n        ...state,\n        headerTime: headerTime,\n        currentTime: format(now, sysTimeFormat),\n      }\n\n    case t.TIMER_START:\n      return {\n        ...state,\n        timer: action.timer,\n      }\n\n    case t.INITIATE_LOADING:\n      const newMessage = {\n        loading: true,\n        entity: 'bot',\n        systemTime: format(new Date(), sysTimeFormat),\n      }\n      return {\n        ...state,\n        messages: [...state.messages, newMessage],\n      }\n\n    case t.SAVE_RESPONSE:\n      const newArray = state.messages.map((msg, index) => {\n        return msg.loading ? action.data : msg\n      })\n      return {\n        ...state,\n        lastUpdateTime: format(new Date(), sysTimeFormat),\n        headerTime: 'Now',\n        messages: newArray.sort((a, b) => {\n          const dateA = parse(\n            a.systemTime,\n            sysTimeFormat,\n            new Date(a.systemTime)\n          )\n          const dateB = parse(\n            b.systemTime,\n            sysTimeFormat,\n            new Date(b.systemTime)\n          )\n          const diff = differenceInMilliseconds(dateA, dateB)\n          return diff\n        }),\n      }\n\n    case t.SAVE_USER_RESPONSE:\n      return {\n        ...state,\n        lastUpdateTime: format(new Date(), sysTimeFormat),\n        headerTime: 'Now',\n        messages: [...state.messages, action.response].sort((a, b) => {\n          const dateA = parse(\n            a.systemTime,\n            sysTimeFormat,\n            new Date(a.systemTime)\n          )\n          const dateB = parse(\n            b.systemTime,\n            sysTimeFormat,\n            new Date(b.systemTime)\n          )\n          const diff = differenceInMilliseconds(dateB, dateA)\n          return diff\n        }),\n      }\n\n    case t.RECEIVE_WEBHOOK_DATA:\n      return {\n        ...state,\n        webhookPayload: action.webhookPayload,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default conversation\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/reducers/conversationReducer.js","import * as t from '../actions/actionTypes'\n\nconst initialState = {\n  visible: false,\n  buttons: []\n}\nfunction config(state = initialState, action) {\n  switch (action.type) {\n    case t.SHOW_BUTTON_BAR:\n      return {\n        ...state,\n        visible: true\n      }\n    case t.HIDE_BUTTON_BAR:\n      return {\n        ...state,\n        visible: false\n      }\n    default:\n      return state\n  }\n}\n\nexport default config\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/reducers/buttonBarReducer.js","import * as t from '../actions/actionTypes'\n\nconst initialState = ''\nfunction config(state = initialState, action) {\n  switch (action.type) {\n    case t.DISPLAY_ERROR:\n      return action.error\n\n    case t.CLEAR_ERROR:\n      return initialState\n\n    default:\n      return state\n  }\n}\n\nexport default config\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/reducers/errorReducer.js","import { combineReducers } from 'redux'\nimport config from './configReducer'\nimport conversation from './conversationReducer'\nimport buttonBar from './buttonBarReducer'\nimport userInput from './userInputReducer'\nimport error from './errorReducer'\n\nconst rootReducer = combineReducers({\n  config,\n  conversation,\n  buttonBar,\n  userInput,\n  error\n})\nexport default rootReducer\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/reducers/rootReducer.js","import * as t from '../actions/actionTypes'\n\nconst initialState = ''\nfunction userInput(state = initialState, action) {\n  switch (action.type) {\n    case t.SAVE_USER_INPUT:\n      return action.value\n\n    default:\n      return state\n  }\n}\n\nexport default userInput\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/reducers/userInputReducer.js","import { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport React, { PureComponent } from 'react'\nimport styled from 'styled-components'\nimport WebFont from 'webfontloader'\n\n// Components\nimport ActivatorButton from './ActivatorButton'\nimport ChatContainer from './ChatContainer'\n\n// Redux\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction'\nimport rootReducer from './reducers/rootReducer'\nimport { initialize } from './actions/initialization'\n\nWebFont.load({\n  google: {\n    families: ['Roboto:300,400,500'],\n  },\n})\n\nconst OuterContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 999999;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  box-sizing: border-box;\n  font-family: 'Roboto', sans-serif;\n  & > * {\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n  }\n`\n\nclass ChatFrame extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.store = createStore(\n      rootReducer,\n      composeWithDevTools(applyMiddleware(thunkMiddleware))\n    )\n    this.currentValue = null\n  }\n  componentDidMount() {\n    // We load the initial options into the Redux store inside of the\n    // componentDidMount() lifecycle hook. This lets us use Redux to manage\n    // state instead of passing props down manually.\n    this.store.dispatch(initialize(this.props))\n\n    // In order to expose when a webhook payload of custom data is received,\n    // we manually create a subscription to the data piece we want to expose\n    this.unsubscribe = this.store.subscribe(() => this.handleChange(this.store))\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe()\n  }\n\n  select(state) {\n    return state.conversation.webhookPayload\n  }\n\n  handleChange(store) {\n    let previousValue = this.currentValue\n    this.currentValue = this.select(store.getState())\n    if (previousValue !== this.currentValue && this.props.onPayload) {\n      this.props.onPayload(this.currentValue)\n    }\n  }\n\n  render() {\n    return (\n      <Provider store={this.store}>\n        <OuterContainer>\n          <ChatContainer />\n          <ActivatorButton variant=\"fab\" />\n        </OuterContainer>\n      </Provider>\n    )\n  }\n}\n\nexport default ChatFrame\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/ChatFrame.js","import ChatFrame from './ChatFrame'\nexport default ChatFrame\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/index.js","module.exports = require(\"webfontloader\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"webfontloader\"\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}