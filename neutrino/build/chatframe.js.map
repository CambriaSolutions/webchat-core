{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 62614eb4d7d51883391d","webpack:///external \"react\"","webpack:///./src/components/chatframe/createTheme.js","webpack:///./src/components/chatframe/actions/dialogflow.js","webpack:///./src/components/chatframe/actions/conversation.js","webpack:///./src/components/chatframe/actions/initialization.js","webpack:///./src/components/chatframe/ChatWindow.js","webpack:///./src/components/chatframe/actions/userInput.js","webpack:///./src/components/chatframe/actions/actionTypes.js","webpack:///./src/components/chatframe/config/dateFormats.js","webpack:///./src/components/chatframe/conversationClient.js","webpack:///./src/components/chatframe/ActivatorButton.js","webpack:///./src/components/chatframe/Header.js","webpack:///./src/components/chatframe/PrivacyPolicy.js","webpack:///./src/components/chatframe/Loading.js","webpack:///./src/components/chatframe/Message.js","webpack:///./src/components/chatframe/CardResponse.js","webpack:///./src/components/chatframe/UserInput.js","webpack:///./src/components/chatframe/ButtonBar.js","webpack:///./src/components/chatframe/ErrorBar.js","webpack:///./src/components/chatframe/styles/media.js","webpack:///./src/components/chatframe/ChatContainer.js","webpack:///./src/components/chatframe/reducers/configReducer.js","webpack:///./src/components/chatframe/reducers/conversationReducer.js","webpack:///./src/components/chatframe/reducers/buttonBarReducer.js","webpack:///./src/components/chatframe/reducers/errorReducer.js","webpack:///./src/components/chatframe/reducers/rootReducer.js","webpack:///./src/components/chatframe/reducers/userInputReducer.js","webpack:///./src/components/chatframe/ChatFrame.js","webpack:///./src/components/chatframe/index.js","webpack:///external \"webfontloader\"","webpack:///external \"@material-ui/core/Paper\""],"names":["primaryColor","secondaryColor","newTheme","palette","error","contrastThreshold","tonalOffset","typography","useNextVariants","overrides","MuiFab","root","position","bottom","right","main","createMuiTheme","dispatch","client","getState","hasSuggestion","find","data","messages","newConversationArray","msg","dateA","parse","a","dateB","b","diff","differenceInMilliseconds","rawResponses","get","responses","type","mapMessageTypeToDescriptor","suggestions","text","card","title","subtitle","imageUrl","buttons","image","imageUri","accessibilityText","rawPayload","Object","field","payload","JSON","systemTime","format","entity","messageId","response","language","clientName","numMessages","sendEvent","now","lastUpdate","diffMinutes","differenceInMinutes","diffSeconds","differenceInSeconds","headerTime","currentTime","clearInterval","newTimer","setInterval","userAvatar","femaleavatar","policyText","message","loading","userInput","saveUserInput","SET_TITLE","SET_AVATAR","SAVE_CLIENT","SAVE_RESPONSE","SAVE_USER_INPUT","SAVE_USER_RESPONSE","INITIATE_LOADING","TIMER_START","UPDATE_CURRENT_TIME","SHOW_BUTTON_BAR","HIDE_BUTTON_BAR","DISPLAY_ERROR","CLEAR_ERROR","SHOW_WINDOW","HIDE_WINDOW","FULLSCREEN","WINDOWED","RECEIVE_WEBHOOK_DATA","SET_CONVERSATION_STARTED","SET_CONVERSATION_ENDED","SHOW_PRIVACY_POLICY","HIDE_PRIVACY_POLICY","SET_PRIVACY_POLICY","sysTimeFormat","constructor","options","encodeQueryData","params","encodeURIComponent","textRequest","queryParams","query","url","textUrl","err","eventRequest","eventUrl","Btn","styled","Fab","p","render","windowVisible","connect","state","showWindow","BotAvatar","Avatar","Carat","div","grey","Container","dark","HeaderText","Typography","HeaderButton","IconButton","fullscreen","withTheme","avatar","showPrivacyPolicy","StyledDialog","Dialog","privacyPolicyVisible","privacyPolicy","hidePrivacyPolicy","Dot","green","ChatBubble","ExternalMessage","UserMessage","Timestamp","then","formattedTimestamp","chatMessage","isLoading","CardContainer","Card","CardImage","CardMedia","cardKey","inputValue","ContentWrapper","metadata","key","loadingMessage","messageData","res","botMessage","userMessage","newMessages","msgElements","buildBotTextMessage","React","defaultHeight","fixedWidth","componentDidUpdate","isEqual","outline","padding","buttonBarVisible","OuterFrame","TextInput","Input","handleKeyPress","e","submitUserInput","Button","lastMessageWithSuggestions","m","hasSuggestions","suggestionElements","id","visible","btn","sendQuickReply","label","red","sizes","giant","desktop","tablet","phone","media","emSize","accumulator","css","Paper","props","initialState","webhookPayload","lastUpdateTime","timer","conversationStarted","rootReducer","action","WebFont","google","families","OuterContainer","createStore","applyMiddleware","thunkMiddleware","createTheme","componentDidMount","initialize","componentWillUnmount","select","handleChange","previousValue","store","ChatFrame"],"mappings":"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","file":"chatframe.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"chatframe\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chatframe\"] = factory();\n\telse\n\t\troot[\"chatframe\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 62614eb4d7d51883391d","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0","import { createMuiTheme } from '@material-ui/core/styles'\nimport * as colors from '@material-ui/core/colors'\nimport isHexColor from 'validator/lib/isHexColor'\n\n// Create a color theme to be used by the rest of the chat window. If the user\n// defines a color that isn't available, fall back to default colors and\n// warn user\nexport default function createTheme(\n  primaryColor = 'lightBlue',\n  secondaryColor = 'pink'\n) {\n  const newTheme = {\n    palette: {\n      error: colors.red,\n      // Used by `getContrastText()` to maximize the contrast between the background and\n      // the text.\n      contrastThreshold: 3,\n      // Used to shift a color's luminance by approximately\n      // two indexes within its tonal palette.\n      // E.g., shift from Red 500 to Red 300 or Red 700.\n      tonalOffset: 0.2,\n    },\n    typography: {\n      useNextVariants: true,\n    },\n    overrides: {\n      MuiFab: {\n        root: {\n          position: 'absolute',\n          bottom: 48,\n          right: 48,\n        },\n      },\n    },\n  }\n  if (isHexColor(primaryColor)) {\n    newTheme.palette.primary = {\n      main: primaryColor,\n    }\n  } else if (colors[primaryColor]) {\n    newTheme.palette.primary = colors[primaryColor]\n  } else {\n    throw new Error(\n      `${primaryColor} is not a valid color. Use a color name from https://material.io/guidelines/style/color.html#color-color-palette`\n    )\n  }\n\n  if (isHexColor(secondaryColor)) {\n    newTheme.palette.secondary = {\n      main: secondaryColor,\n    }\n  } else if (secondaryColor && colors[secondaryColor]) {\n    newTheme.palette.secondary = colors[secondaryColor]\n  } else {\n    throw new Error(\n      `${secondaryColor} is not a valid color. \n      Use a color name from https://material.io/guidelines/style/color.html#color-color-palette`\n    )\n  }\n  return createMuiTheme(newTheme)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/createTheme.js","import { format, parse, differenceInMilliseconds } from 'date-fns'\nimport get from 'lodash/get'\nimport find from 'lodash/find'\nimport {\n  SAVE_CLIENT,\n  SAVE_RESPONSE,\n  INITIATE_LOADING,\n  SHOW_BUTTON_BAR,\n  HIDE_BUTTON_BAR,\n  DISPLAY_ERROR,\n  CLEAR_ERROR,\n  RECEIVE_WEBHOOK_DATA,\n  SET_CONVERSATION_ENDED,\n} from './actionTypes'\n\n// Date Format\nimport { sysTimeFormat } from '../config/dateFormats'\n\nimport { Client } from '../conversationClient'\n\nexport function setupDialogflow(clientOptions) {\n  return dispatch => {\n    const client = new Client(clientOptions)\n    const clientName = 'dialogflow'\n    dispatch({ type: SAVE_CLIENT, client, clientName })\n  }\n}\n\nexport function saveResponse(data) {\n  return (dispatch, getState) => {\n    const { messages } = getState().conversation\n    const hasSuggestion = find(data.responses, ['type', 'suggestion'])\n    if (hasSuggestion) {\n      dispatch({ type: SHOW_BUTTON_BAR })\n    } else {\n      dispatch({ type: HIDE_BUTTON_BAR })\n    }\n    if (messages.length === 0) {\n      dispatch({ type: SAVE_RESPONSE, newConversationArray: [data] })\n    } else {\n      const newConversationArray = messages\n        .map(msg => {\n          return msg.loading ? data : msg\n        })\n        .sort((a, b) => {\n          const dateA = parse(\n            a.systemTime,\n            sysTimeFormat,\n            new Date(a.systemTime)\n          )\n          const dateB = parse(\n            b.systemTime,\n            sysTimeFormat,\n            new Date(b.systemTime)\n          )\n          const diff = differenceInMilliseconds(dateA, dateB)\n          return diff\n        })\n\n      dispatch({ type: SAVE_RESPONSE, newConversationArray })\n    }\n  }\n}\n\nexport function getMessageFromDialogflow(response) {\n  return dispatch => {\n    function mapMessageTypeToDescriptor(type) {\n      switch (type) {\n        case 'text':\n          return 'text'\n        case 'card':\n          return 'card'\n        case 'quickReplies':\n          return 'suggestion'\n        case 'image':\n          return 'image'\n        case 'payload':\n          return 'payload'\n        default:\n          return 'text'\n      }\n    }\n    const rawResponses = get(response, 'queryResult.fulfillmentMessages', [])\n    const responses = rawResponses.map(msg => {\n      const type = mapMessageTypeToDescriptor(msg.message)\n      const suggestions = get(msg, 'quickReplies.quickReplies', [])\n      const text = get(msg, 'text.text', null)\n      const card = {\n        title: get(msg, 'card.title', ''),\n        subtitle: get(msg, 'card.subtitle', ''),\n        imageUrl: get(msg, 'card.imageUri', ''),\n        buttons: get(msg, 'card.buttons', []),\n      }\n      const image = {\n        imageUri: get(msg, 'image.imageUri', ''),\n        accessibilityText: get(msg, 'image.accessibilityText', ''),\n      }\n\n      const payload = {}\n      if (type === 'payload') {\n        const rawPayload = get(msg, 'payload.fields', {})\n        for (const [field, data] of Object.entries(rawPayload)) {\n          if (data.kind === 'stringValue') {\n            try {\n              // Attempt to parse data.stringValue as JSON in case it is\n              payload[field] = JSON.parse(data.stringValue)\n            } catch (err) {\n              // It's not JSON, just add the string\n              payload[field] = data.stringValue\n            }\n          }\n        }\n        dispatch({ type: RECEIVE_WEBHOOK_DATA, payload })\n      }\n\n      switch (type) {\n        case 'text':\n          return { type, text }\n\n        case 'image':\n          return { type, image }\n\n        case 'suggestion':\n          return { type, suggestions }\n\n        case 'card':\n          return { type, card }\n\n        case 'payload':\n          return { type, payload }\n\n        default:\n          return { type, text }\n      }\n    })\n\n    const systemTime = format(new Date(), sysTimeFormat)\n    const data = {\n      entity: 'bot',\n      loading: false,\n      messageId: response.responseId,\n      language: response.queryResult.languageCode,\n      systemTime,\n      responses,\n    }\n\n    dispatch(saveResponse(data))\n  }\n}\n\nexport function sendMessageWithDialogflow(message) {\n  return (dispatch, getState) => {\n    const { client } = getState().conversation\n    dispatch({ type: INITIATE_LOADING })\n    client\n      .textRequest(message)\n      .then(response => {\n        if (response) {\n          dispatch(getMessageFromDialogflow(response))\n          dispatch({ type: CLEAR_ERROR })\n        } else {\n          dispatch({\n            type: DISPLAY_ERROR,\n            error: 'No response received from chat provider. Please try again.',\n          })\n        }\n      })\n      .catch(error => {\n        dispatch({\n          type: DISPLAY_ERROR,\n          error: 'Unable to connect to the chat provider. Please try again.',\n        })\n        throw new Error(error)\n      })\n  }\n}\n\nexport function sendEvent(event) {\n  return (dispatch, getState) => {\n    const { client } = getState().conversation\n    dispatch({ type: INITIATE_LOADING })\n    client\n      .eventRequest(event)\n      .then(response => {\n        if (response) {\n          dispatch(getMessageFromDialogflow(response))\n          dispatch({ type: CLEAR_ERROR })\n        } else {\n          dispatch({\n            type: DISPLAY_ERROR,\n            error: 'No response received from chat provider. Please try again.',\n          })\n          dispatch({ type: SET_CONVERSATION_ENDED })\n        }\n      })\n      .catch(error => {\n        dispatch({\n          type: DISPLAY_ERROR,\n          error: 'Unable to connect to the chat provider. Please try again.',\n        })\n        throw new Error(error)\n      })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/actions/dialogflow.js","import { format } from 'date-fns'\nimport {\n  SAVE_USER_RESPONSE,\n  DISPLAY_ERROR,\n  HIDE_BUTTON_BAR,\n} from './actionTypes'\nimport { setupDialogflow, sendMessageWithDialogflow } from './dialogflow'\n// Date Format\nimport { sysTimeFormat } from '../config/dateFormats'\n\nexport function setupClient(client, clientOptions) {\n  return dispatch => {\n    if (!client) {\n      throw new Error('No conversation provider selected.')\n    }\n\n    // Setup Dialogflow\n    if (client.toLowerCase() === 'dialogflow') {\n      dispatch(setupDialogflow(clientOptions))\n    } else {\n      // Unrecognized client\n      dispatch({ type: DISPLAY_ERROR, error: `Unable to connect to ${client}` })\n      throw new Error(`${client} is not a recognized conversation provider.`)\n    }\n  }\n}\nexport function sendMessage(message) {\n  return (dispatch, getState) => {\n    const { clientName } = getState().conversation\n    if (clientName.toLowerCase() === 'dialogflow') {\n      dispatch(sendMessageWithDialogflow(message))\n    } else {\n      // Unrecognized client\n      dispatch({\n        type: DISPLAY_ERROR,\n        error: `Unable to connect to ${clientName}`,\n      })\n      throw new Error(\n        `${clientName} is not a recognized conversation provider.`,\n      )\n    }\n  }\n}\n\nexport function createUserResponse(text) {\n  return (dispatch, getState) => {\n    const numMessages = getState().conversation.messages.length\n    const systemTime = format(new Date(), sysTimeFormat)\n    const response = {\n      entity: 'user',\n      messageId: `usermessage-${numMessages}`,\n      systemTime,\n      text,\n    }\n    dispatch({ type: SAVE_USER_RESPONSE, response })\n    dispatch({ type: HIDE_BUTTON_BAR })\n    dispatch(sendMessage(text))\n  }\n}\n\nexport function sendQuickReply(text) {\n  return dispatch => {\n    dispatch(createUserResponse(text))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/actions/conversation.js","import {\n  parse,\n  format,\n  differenceInMinutes,\n  differenceInSeconds,\n} from 'date-fns'\nimport {\n  SET_TITLE,\n  SET_AVATAR,\n  TIMER_START,\n  UPDATE_CURRENT_TIME,\n  SHOW_WINDOW,\n  HIDE_WINDOW,\n  FULLSCREEN,\n  WINDOWED,\n  SET_CONVERSATION_STARTED,\n  SHOW_PRIVACY_POLICY,\n  HIDE_PRIVACY_POLICY,\n  SET_PRIVACY_POLICY,\n} from './actionTypes'\n\nimport { sysTimeFormat } from '../config/dateFormats'\nimport { setupClient } from './conversation'\nimport { sendEvent } from './dialogflow'\nimport femaleavatar from '../femaleavatar.svg'\n\nexport function showWindow() {\n  return (dispatch, getState) => {\n    const { conversationStarted } = getState().conversation\n    dispatch({ type: SHOW_WINDOW })\n    if (!conversationStarted) {\n      dispatch(sendEvent('Welcome'))\n      dispatch({ type: SET_CONVERSATION_STARTED })\n    }\n  }\n}\nexport function showPrivacyPolicy() {\n  return { type: SHOW_PRIVACY_POLICY }\n}\nexport function hidePrivacyPolicy() {\n  return { type: HIDE_PRIVACY_POLICY }\n}\nexport function hideWindow() {\n  return { type: HIDE_WINDOW }\n}\nexport function showFullscreen() {\n  return { type: FULLSCREEN }\n}\nexport function showWindowed() {\n  return { type: WINDOWED }\n}\n\nfunction updateIdleTime() {\n  return (dispatch, getState) => {\n    const { lastUpdateTime } = getState().conversation\n    const now = new Date()\n    const lastUpdate = parse(\n      lastUpdateTime,\n      sysTimeFormat,\n      new Date(lastUpdateTime)\n    )\n    const diffMinutes = differenceInMinutes(now, lastUpdate)\n    const diffSeconds = differenceInSeconds(now, lastUpdate)\n    let headerTime = 'Now'\n    if (diffMinutes >= 1) {\n      headerTime = `${diffMinutes} min ago`\n    } else if (diffSeconds >= 9) {\n      headerTime = `${diffSeconds} sec ago`\n    }\n\n    const currentTime = format(now, sysTimeFormat)\n\n    dispatch({ type: UPDATE_CURRENT_TIME, headerTime, currentTime })\n  }\n}\n\nexport function startTimer() {\n  return (dispatch, getState) => {\n    const { timer } = getState().conversation\n    // If there's an existing timer, clear it\n    if (timer) {\n      clearInterval(timer)\n    }\n    // Create a new timer to tick every 10 seconds\n    const newTimer = setInterval(() => dispatch(updateIdleTime()), 1000 * 10)\n    // Save the new timer\n    dispatch({ type: TIMER_START, newTimer })\n    // Dispatch the first tick\n    dispatch(updateIdleTime())\n  }\n}\n\nexport function initialize(props) {\n  return dispatch => {\n    const {\n      title,\n      avatar,\n      client,\n      clientOptions,\n      initialActive,\n      fullscreen,\n      policyText,\n    } = props\n    let userAvatar = avatar\n    if (!userAvatar) {\n      userAvatar = femaleavatar\n    }\n    dispatch({ type: SET_TITLE, title })\n    dispatch({ type: SET_AVATAR, avatar: userAvatar })\n    dispatch(setupClient(client, clientOptions))\n    dispatch(startTimer())\n\n    if (policyText && policyText !== '') {\n      dispatch({ type: SET_PRIVACY_POLICY, policyText })\n    }\n\n    if (initialActive === true) {\n      dispatch({ type: SET_CONVERSATION_STARTED })\n      dispatch(sendEvent('Welcome'))\n      dispatch(showWindow())\n    } else {\n      dispatch(hideWindow())\n    }\n\n    if (fullscreen === true) {\n      dispatch(showFullscreen())\n    } else {\n      dispatch(showWindowed())\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/actions/initialization.js","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport isEqual from 'lodash/isEqual'\nimport merge from 'lodash/merge'\nimport {\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  AutoSizer,\n} from 'react-virtualized'\nimport grey from '@material-ui/core/colors/grey'\nimport { parse, differenceInMilliseconds } from 'date-fns'\nimport { sysTimeFormat } from './config/dateFormats'\nimport Message from './Message'\nimport CardResponse from './CardResponse'\n\nconst ContentWrapper = styled.div`\n  background: ${grey[100]};\n  z-index: 4;\n  grid-area: chatwindow;\n  margin-bottom: 1px;\n  margin-top: 8px;\n  width: 100%;\n`\n\nfunction buildUserMessage(message) {\n  return (\n    <Message\n      message={message.text}\n      entity={message.entity}\n      key={message.messageId}\n      timestamp={message.systemTime}\n      isLoading={false}\n    />\n  )\n}\n\nfunction buildLoadingMessage(message) {\n  return (\n    <Message\n      key=\"loading\"\n      entity=\"bot\"\n      timestamp={message.systemTime}\n      isLoading={message.loading}\n    />\n  )\n}\n\nfunction buildBotTextMessage(message) {\n  return (\n    <Message\n      message={message.text}\n      entity={message.entity}\n      key={message.messageId}\n      isLoading={false}\n      timestamp={message.systemTime}\n    />\n  )\n}\n\nfunction buildBotCardMessage(message) {\n  return (\n    <CardResponse\n      data={message.card}\n      timestamp={message.systemTime}\n      key={message.messageId}\n    />\n  )\n}\n\nclass ChatWindow extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.ListRef = React.createRef()\n    this.cache = new CellMeasurerCache({\n      defaultHeight: 300,\n      fixedWidth: true,\n    })\n    this.messages = []\n    this.messageElements = []\n    this.state = { numMessages: 0 }\n  }\n\n  // When we receive new props, react-virtualized is going to recalculate:\n  // 1. The total size of the chat window container\n  // 2. The estimated size of each message\n  // 3. Where the window should scroll to\n  // Because we have items with wildly different sizes (e.g. Cards vs. Messages),\n  // we need to forcibly clear our cached size data when new messages are received\n  // Before trying to scroll to bottom\n  componentDidUpdate() {\n    const newMessages = this.parseMessages()\n    if (!isEqual(this.messages, newMessages)) {\n      this.messages = newMessages\n      this.createMessageElements()\n      this.cache.clearAll()\n      if (this.ListRef.current) {\n        this.ListRef.current.recomputeRowHeights()\n        this.ListRef.current.scrollToRow(newMessages.length)\n        this.ListRef.current.forceUpdateGrid()\n      }\n    }\n  }\n\n  onResize = () => {\n    this.ListRef.current.scrollToRow(this.messages.length)\n  }\n\n  // Parse the raw message structure from the Redux props and convert\n  // it into the appropriate format for each Message\n  parseMessages = () => {\n    const { messages } = this.props\n    const messageData = []\n    messages.forEach((msg, index) => {\n      // We want to make sure that each message has all of the metadata\n      // The structure of the response is not consistent, so we are building\n      // a consistent object describing each message.\n      const metadata = {\n        systemTime: msg.systemTime,\n        entity: msg.entity,\n        key: `msg-${index}-${msg.systemTime}`,\n      }\n      if (msg.loading) {\n        const loadingMessage = merge(msg, metadata)\n        messageData.push(loadingMessage)\n      } else if (msg.entity === 'bot') {\n        // Bot messages contain an array of 'responses' -- we don't want to\n        // display all of them here (e.g. suggestions), so we only push\n        // the ones we display to the final array\n        msg.responses.forEach(res => {\n          if (res.type === 'text' || res.type === 'card') {\n            const botMessage = merge(res, metadata)\n            messageData.push(botMessage)\n          }\n        })\n      } else if (msg.entity === 'user') {\n        const userMessage = merge(msg, metadata)\n        messageData.push(userMessage)\n      }\n    })\n    return messageData\n  }\n\n  // For each message, create the appropriate React component and save\n  // it for later use. We do this outside of rowRenderer to avoid\n  // extra work inside of each render step\n  createMessageElements = () => {\n    const newMessages = this.parseMessages()\n    const msgElements = []\n    newMessages.forEach(msg => {\n      if (msg.loading) {\n        msgElements.push(buildLoadingMessage(msg))\n      } else if (msg.entity === 'user') {\n        msgElements.push(buildUserMessage(msg))\n      } else if (msg.entity === 'bot' && msg.type === 'text') {\n        msgElements.push(buildBotTextMessage(msg))\n      } else if (msg.entity === 'bot' && msg.type === 'card') {\n        msgElements.push(buildBotCardMessage(msg))\n      } else {\n        msgElements.push(buildBotTextMessage({ text: 'Something went wrong.' }))\n      }\n    })\n\n    msgElements.sort((a, b) => {\n      const dateA = parse(\n        a.props.timestamp,\n        sysTimeFormat,\n        new Date(a.props.timestamp),\n      )\n      const dateB = parse(\n        b.props.timestamp,\n        sysTimeFormat,\n        new Date(b.props.timestamp),\n      )\n      const diff = differenceInMilliseconds(dateA, dateB)\n      return diff\n    })\n\n    this.messageElements = msgElements\n    this.setState({ numMessages: msgElements.length })\n  }\n\n  // Render each row. During the render step, measure the size of\n  // each message and size it appropriately.\n  rowRenderer = ({ index, key, parent, style }) => {\n    return (\n      <CellMeasurer\n        cache={this.cache}\n        key={key}\n        parent={parent}\n        rowIndex={index}\n      >\n        <div style={style}>{this.messageElements[index]}</div>\n      </CellMeasurer>\n    )\n  }\n\n  render() {\n    const { messages } = this.props\n    const { numMessages } = this.state\n    return (\n      <ContentWrapper elevation={1} square>\n        <AutoSizer onResize={this.onResize}>\n          {({ height, width }) => (\n            <List\n              messages={messages}\n              style={{\n                outline: 'none',\n                padding: '0 16px 0 16px',\n              }}\n              ref={this.ListRef}\n              height={height}\n              width={width}\n              rowCount={numMessages}\n              deferredMeasurementCache={this.cache}\n              rowHeight={this.cache.rowHeight}\n              rowRenderer={this.rowRenderer}\n              onScroll={this.onScroll}\n              scrollToIndex={numMessages}\n              scrollToAlignment=\"end\"\n            />\n          )}\n        </AutoSizer>\n      </ContentWrapper>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.conversation.messages,\n    buttonBarVisible: state.buttonBar.visible,\n    error: state.error,\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {}\n// }\n\nexport default connect(mapStateToProps)(ChatWindow)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/ChatWindow.js","import { SAVE_USER_INPUT } from './actionTypes'\nimport { createUserResponse } from './conversation'\n\nexport function saveUserInput(value) {\n  return { type: SAVE_USER_INPUT, value }\n}\n\nexport function submitUserInput() {\n  return (dispatch, getState) => {\n    const { userInput } = getState()\n    if (!userInput || userInput === '') {\n      return\n    }\n    dispatch(createUserResponse(userInput))\n    dispatch(saveUserInput(''))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/actions/userInput.js","export const SET_TITLE = 'SET_TITLE'\nexport const SET_AVATAR = 'SET_AVATAR'\nexport const SAVE_CLIENT = 'SAVE_CLIENT'\nexport const SAVE_RESPONSE = 'SAVE_RESPONSE'\nexport const SAVE_USER_INPUT = 'SAVE_USER_INPUT'\nexport const SAVE_USER_RESPONSE = 'SAVE_USER_RESPONSE'\nexport const INITIATE_LOADING = 'INITIATE_LOADING'\nexport const UPDATE_TIME = 'UPDATE_TIME'\nexport const TIMER_START = 'TIMER_START'\nexport const UPDATE_CURRENT_TIME = 'UPDATE_CURRENT_TIME'\nexport const SHOW_BUTTON_BAR = 'SHOW_BUTTON_BAR'\nexport const HIDE_BUTTON_BAR = 'HIDE_BUTTON_BAR'\nexport const DISPLAY_ERROR = 'DISPLAY_ERROR'\nexport const CLEAR_ERROR = 'CLEAR_ERROR'\nexport const SHOW_WINDOW = 'SHOW_WINDOW'\nexport const HIDE_WINDOW = 'HIDE_WINDOW'\nexport const FULLSCREEN = 'FULLSCREEN'\nexport const WINDOWED = 'WINDOWED'\nexport const RECEIVE_WEBHOOK_DATA = 'RECEIVE_WEBHOOK_DATA'\nexport const SET_CONVERSATION_STARTED = 'SET_CONVERSATION_STARTED'\nexport const SET_CONVERSATION_ENDED = 'SET_CONVERSATION_ENDED'\nexport const SHOW_PRIVACY_POLICY = 'SHOW_PRIVACY_POLICY'\nexport const HIDE_PRIVACY_POLICY = 'HIDE_PRIVACY_POLICY'\nexport const SET_PRIVACY_POLICY = 'SET_PRIVACY_POLICY'\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/actions/actionTypes.js","export const sysTimeFormat = \"yyyy-MM-dd'T'hh:mm:ss.SSS\"\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/config/dateFormats.js","export class Client {\n  constructor(options) {\n    if (!options || !options.textUrl) {\n      throw new Error(\n        'Fulfillment URL is required to generate a conversation client'\n      )\n    }\n    this.textUrl = options.textUrl\n    this.eventUrl = options.eventUrl\n  }\n\n  encodeQueryData(data) {\n    const params = []\n    for (const d in data) {\n      params.push(`${encodeURIComponent(d)}=${encodeURIComponent(data[d])}`)\n    }\n    return params.join('&')\n  }\n\n  textRequest(query) {\n    if (!query) {\n      throw new Error('Query should not be empty')\n    }\n    const params = {\n      query,\n    }\n\n    const queryParams = this.encodeQueryData(params)\n    const url = `${this.textUrl}?${queryParams}`\n\n    return fetch(url)\n      .then(response => {\n        return response.json()\n      })\n      .catch(err => {\n        throw new Error(err)\n      })\n  }\n\n  eventRequest(query) {\n    if (!query) {\n      throw new Error('Query should not be empty')\n    }\n\n    const params = {\n      query,\n    }\n\n    const queryParams = this.encodeQueryData(params)\n    const url = `${this.eventUrl}?${queryParams}`\n\n    return fetch(url)\n      .then(response => {\n        return response.json()\n      })\n      .catch(err => {\n        throw new Error(err)\n      })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/conversationClient.js","import React, { PureComponent } from 'react'\nimport styled from 'styled-components'\nimport Fab from '@material-ui/core/Fab'\nimport Chat from '@material-ui/icons/Chat'\nimport Zoom from '@material-ui/core/Zoom'\n\n// Redux\nimport { connect } from 'react-redux'\nimport { showWindow } from './actions/initialization'\n\nconst Btn = styled(Fab)`\n  && {\n    display: ${p => (p.active ? 'block' : 'none')};\n    pointer-events: auto;\n    padding-top: 8px;\n  }\n`\n\nclass ActivatorButton extends PureComponent {\n  render() {\n    const { windowVisible, showWindow } = this.props\n    return (\n      <Zoom in={!windowVisible} unmountOnExit>\n        <Btn\n          color=\"primary\"\n          onClick={showWindow}\n          active={windowVisible ? 0 : 1}\n        >\n          <Chat />\n        </Btn>\n      </Zoom>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    windowVisible: state.config.windowVisible,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showWindow: () => {\n      dispatch(showWindow())\n    },\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ActivatorButton)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/ActivatorButton.js","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { withTheme } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Fullscreen from '@material-ui/icons/Fullscreen'\nimport FullscreenExit from '@material-ui/icons/FullscreenExit'\nimport Info from '@material-ui/icons/Info'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Close from '@material-ui/icons/Close'\nimport grey from '@material-ui/core/colors/grey'\nimport styled from 'styled-components'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport {\n  hideWindow,\n  showFullscreen,\n  showWindowed,\n  showPrivacyPolicy,\n} from './actions/initialization'\n\nconst BotAvatar = styled(Avatar)`\n  && {\n    flex: 0 0 32px;\n    width: 32px;\n    height: 32px;\n    margin-right: 16px;\n  }\n`\n\nconst Carat = styled.div`\n  position: absolute;\n  bottom: -1px;\n  left: 27px;\n  width: 0;\n  height: 0;\n  border-left: 6px solid transparent;\n  border-right: 6px solid transparent;\n  border-bottom: 6px solid ${grey[100]};\n`\n\nconst Container = styled.div`\n  && {\n    position: relative;\n    background: ${p => p.theme.palette.primary.dark};\n    padding: 16px;\n    height: 32px;\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n    border-bottom-left-radius: 0px;\n    border-bottom-right-radius: 0px;\n    border-top-right-radius: 4px;\n    border-top-left-radius: 4px;\n    z-index: 1;\n    grid-area: header;\n    box-sizing: content-box; /*For WordPress*/\n    line-height: normal; /*For WordPress*/\n  }\n`\n\nconst HeaderText = styled(Typography)`\n  && {\n    font-family: 'Product Sans';\n    font-weight: 400;\n    height: 32px;\n    font-size: 18px;\n    line-height: 32px;\n    flex: 1;\n    color: ${p =>\n      p.theme.palette.getContrastText(p.theme.palette.primary.dark)};\n  }\n`\n\nconst HeaderButton = styled(IconButton)`\n  && {\n    padding: 6px;\n    flex: 0;\n    cursor: pointer;\n    color: ${p =>\n      p.theme.palette.getContrastText(p.theme.palette.primary.dark)};\n    &:hover {\n      background: rgba(255, 255, 255, 0.15);\n    }\n  }\n`\n\nclass Header extends PureComponent {\n  render() {\n    const {\n      title,\n      theme,\n      hideWindow,\n      showWindowed,\n      showFullscreen,\n      fullscreen,\n      avatar,\n      showPrivacyPolicy,\n    } = this.props\n    return (\n      <Container theme={theme}>\n        <Carat />\n        <BotAvatar alt={title} src={avatar} />\n        <HeaderText theme={theme} variant=\"h6\">\n          {title}\n        </HeaderText>\n        <Tooltip title=\"Privacy Policy\" placement=\"bottom\">\n          <HeaderButton\n            theme={theme}\n            onClick={showPrivacyPolicy}\n            aria-label=\"Windowed\"\n          >\n            <Info fontSize=\"small\" />\n          </HeaderButton>\n        </Tooltip>\n        {fullscreen ? (\n          <HeaderButton\n            theme={theme}\n            onClick={showWindowed}\n            aria-label=\"Windowed\"\n          >\n            <FullscreenExit fontSize=\"small\" />\n          </HeaderButton>\n        ) : (\n          <HeaderButton\n            theme={theme}\n            onClick={showFullscreen}\n            aria-label=\"Fullscreen\"\n          >\n            <Fullscreen fontSize=\"small\" />\n          </HeaderButton>\n        )}\n        <HeaderButton theme={theme} onClick={hideWindow} aria-label=\"Close\">\n          <Close fontSize=\"small\" />\n        </HeaderButton>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    title: state.config.title,\n    fullscreen: state.config.fullscreen,\n    avatar: state.config.avatar,\n  }\n}\n\nconst mapDispatchToProps = {\n  hideWindow,\n  showFullscreen,\n  showWindowed,\n  showPrivacyPolicy,\n}\n\nexport default withTheme()(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Header)\n)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/Header.js","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport Button from '@material-ui/core/Button'\nimport styled from 'styled-components'\nimport { hidePrivacyPolicy } from './actions/initialization'\n\nconst StyledDialog = styled(Dialog)`\n  && {\n    position: absolute;\n  }\n`\n\nclass PrivacyPolicy extends PureComponent {\n  render() {\n    const {\n      hidePrivacyPolicy,\n      privacyPolicyVisible,\n      privacyPolicy,\n      parentRef,\n    } = this.props\n    return (\n      <StyledDialog\n        open={privacyPolicyVisible}\n        onClose={hidePrivacyPolicy}\n        aria-labelledby=\"privacy-policy\"\n        container={parentRef}\n        scroll=\"paper\"\n      >\n        <DialogTitle>Privacy Statement</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{privacyPolicy}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={hidePrivacyPolicy} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </StyledDialog>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    privacyPolicyVisible: state.config.privacyPolicyVisible,\n    privacyPolicy: state.config.privacyPolicy,\n  }\n}\n\nconst mapDispatchToProps = {\n  hidePrivacyPolicy,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PrivacyPolicy)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/PrivacyPolicy.js","import React, { PureComponent } from 'react'\nimport styled from 'styled-components'\n\n// Colors\nimport green from '@material-ui/core/colors/green'\n\nconst Container = styled.div`\n  text-align: center;\n  width: 42px;\n  height: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-around;\n  align-items: center;\n`\n\nconst Dot = styled.div`\n  animation: dot-keyframes 1s infinite ease-in-out;\n  background-color: ${green[900]};\n  border-radius: 10px;\n  display: inline-block;\n  height: 8px;\n  width: 8px;\n\n  &:nth-child(2) {\n    animation-delay: 0.25s;\n  }\n\n  &:nth-child(3) {\n    animation-delay: 0.5s;\n  }\n\n  @keyframes dot-keyframes {\n    0% {\n      opacity: 0.4;\n      transform: scale(1, 1);\n    }\n\n    50% {\n      opacity: 1;\n      transform: scale(1.3, 1.3);\n    }\n\n    100% {\n      opacity: 0.4;\n      transform: scale(1, 1);\n    }\n  }\n`\n\nclass Loading extends PureComponent {\n  render() {\n    return (\n      <Container>\n        <Dot />\n        <Dot />\n        <Dot />\n      </Container>\n    )\n  }\n}\n\nexport default Loading\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/Loading.js","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { parse, differenceInMinutes, differenceInSeconds } from 'date-fns'\nimport grey from '@material-ui/core/colors/grey'\nimport Typography from '@material-ui/core/Typography'\nimport { withTheme } from '@material-ui/core/styles'\nimport { sysTimeFormat } from './config/dateFormats'\nimport Loading from './Loading'\n\nconst Container = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  margin: 16px 0;\n  height: min-content;\n  align-items: ${p => (p.entity === 'user' ? 'flex-end' : 'flex-start')};\n`\n\nconst ChatBubble = styled.div`\n  width: 100%;\n  height: min-content;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: ${p => (p.entity === 'user' ? 'flex-end' : 'flex-start')};\n`\n\nconst ExternalMessage = styled.div`\n  && {\n    background: ${grey[400]};\n    border-top-right-radius: 10px;\n    border-top-left-radius: 1px;\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius: 10px;\n    padding: 12px;\n  }\n`\n\nconst UserMessage = styled.div`\n  && {\n    background-color: ${p => p.theme.palette.primary.main};\n    color: ${p =>\n      p.theme.palette.getContrastText(p.theme.palette.primary.dark)};\n    border-top-left-radius: 10px;\n    border-top-right-radius: 1px;\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius: 10px;\n    padding: 12px;\n  }\n`\n\nconst Timestamp = styled(Typography)`\n  && {\n    color: ${grey[500]};\n    margin-top: 8px;\n    padding-left: 12px;\n    padding-right: 2px;\n  }\n`\n\nclass Message extends PureComponent {\n  render() {\n    const {\n      message,\n      entity,\n      isLoading,\n      timestamp,\n      currentTime,\n      theme,\n    } = this.props\n\n    const now = parse(currentTime, sysTimeFormat, new Date(currentTime))\n    const then = parse(timestamp, sysTimeFormat, new Date(currentTime))\n    const diffMinutes = differenceInMinutes(now, then)\n    const diffSeconds = differenceInSeconds(now, then)\n    let formattedTimestamp = null\n    if (diffMinutes >= 1) {\n      formattedTimestamp = `${diffMinutes} min`\n    } else if (diffSeconds >= 10) {\n      formattedTimestamp = `${diffSeconds} sec`\n    } else {\n      formattedTimestamp = 'Now'\n    }\n\n    const chatMessage =\n      entity === 'user' ? (\n        <UserMessage elevation={1} theme={theme}>\n          <Typography variant=\"body1\">{message}</Typography>\n        </UserMessage>\n      ) : (\n        <ExternalMessage elevation={1}>\n          {isLoading ? (\n            <Loading />\n          ) : (\n            <Typography variant=\"body1\">{message}</Typography>\n          )}\n        </ExternalMessage>\n      )\n    return (\n      <Container entity={entity}>\n        <ChatBubble entity={entity}>{chatMessage}</ChatBubble>\n        <Timestamp variant=\"caption\">{formattedTimestamp}</Timestamp>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentTime: state.conversation.currentTime,\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {}\n// }\n\nexport default withTheme()(connect(mapStateToProps)(Message))\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/Message.js","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\n\n// Date Format\nimport { sysTimeFormat } from './config/dateFormats'\n\nconst CardContainer = styled(Card)`\n  && {\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius: 10px;\n    background: #fff;\n    margin: 16px auto;\n    white-space: pre-line;\n  }\n`\n\nconst CardImage = styled(CardMedia)`\n  && {\n    height: ${p => (p.image && p.image !== '' ? '200px' : '0px')};\n    background-size: cover;\n    background-position: center center;\n  }\n`\n\nclass CardResponse extends PureComponent {\n  render() {\n    const { title, subtitle, imageUrl, buttons } = this.props.data\n\n    return (\n      <CardContainer>\n        <CardImage image={encodeURI(imageUrl)} title=\"\" />\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\">\n            {title}\n          </Typography>\n          <Typography variant=\"body1\">{subtitle}</Typography>\n        </CardContent>\n        <CardActions>\n          {buttons.map((b, index) => {\n            const cardKey = `card-${index}${format(new Date(), sysTimeFormat)}`\n            return (\n              <Button\n                href={b.postback}\n                target=\"_blank\"\n                size=\"small\"\n                color=\"primary\"\n                key={cardKey}\n              >\n                {b.text}\n              </Button>\n            )\n          })}\n        </CardActions>\n      </CardContainer>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inputValue: state.userInput,\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     saveUserInput: e => {},\n//     submitUserInput: () => {},\n//   }\n// }\n\nexport default connect(mapStateToProps)(CardResponse)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/CardResponse.js","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport Send from '@material-ui/icons/Send'\nimport styled from 'styled-components'\nimport Input from '@material-ui/core/Input'\nimport IconButton from '@material-ui/core/IconButton'\n\n// Redux\nimport { saveUserInput, submitUserInput } from './actions/userInput'\n\nconst OuterFrame = styled.div`\n  grid-area: userinput;\n  background: #fefefe;\n  z-index: 1;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\n  z-index: 4;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n`\n\nconst TextInput = styled(Input)`\n  && {\n    /*All properties below are specified to combat WordPress*/\n    & > input[type='text'] {\n      border: none;\n      width: 100%;\n      line-height: 16px;\n      outline: none;\n      color: #000;\n      height: 100%;\n      padding: 0px 16px 0px 16px;\n      font-size: 16px;\n    }\n  }\n`\n\nclass UserInput extends PureComponent {\n  constructor() {\n    super()\n    this.handleKeyPress = this.handleKeyPress.bind(this)\n  }\n\n  handleKeyPress(e) {\n    // Enter was pressed\n    if (e.charCode === 13) {\n      this.props.submitUserInput()\n    }\n  }\n\n  render() {\n    const { saveUserInput, inputValue } = this.props\n    return (\n      <OuterFrame>\n        <TextInput\n          fullWidth\n          disableUnderline\n          placeholder=\"Send a message\"\n          onChange={saveUserInput}\n          value={inputValue}\n          onKeyPress={this.handleKeyPress}\n        />\n        <IconButton\n          onClick={this.props.submitUserInput}\n          aria-label=\"Send\"\n          color=\"primary\"\n        >\n          <Send />\n        </IconButton>\n      </OuterFrame>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inputValue: state.userInput,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveUserInput: e => {\n      dispatch(saveUserInput(e.target.value))\n    },\n    submitUserInput: () => {\n      dispatch(submitUserInput())\n    },\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserInput)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/UserInput.js","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport Button from '@material-ui/core/Button'\nimport findLast from 'lodash/findLast'\nimport find from 'lodash/find'\nimport grey from '@material-ui/core/colors/grey'\nimport { sendQuickReply } from './actions/conversation'\n\nconst Container = styled.div`\n  grid-area: buttonbar;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n  padding: ${p => (p.visible ? '4px 4px 16px 16px' : '0 16px')};\n  background: ${grey[300]};\n  border-top: ${p => (p.visible ? '1px solid rgba(0, 0, 0, 0.2)' : 'none')};\n  overflow-y: auto;\n`\n\nconst Btn = styled(Button)`\n  && {\n    margin-right: 12px;\n    margin-top: 12px;\n    display: ${p => (p.visible === 'true' ? 'block' : 'none')};\n  }\n`\n\nclass ButtonBar extends PureComponent {\n  render() {\n    const { visible, messages, sendQuickReply } = this.props\n    const lastMessageWithSuggestions = findLast(messages, m => {\n      const hasSuggestions = find(m.responses, ['type', 'suggestion'])\n      return hasSuggestions\n    })\n\n    const suggestionElements = []\n    if (lastMessageWithSuggestions) {\n      const messages = lastMessageWithSuggestions.responses.filter(m => {\n        return m.type === 'suggestion'\n      })\n      for (const message of messages) {\n        for (const suggestion of message.suggestions) {\n          suggestionElements.push({\n            label: suggestion,\n            id: lastMessageWithSuggestions.messageId,\n            visible,\n          })\n        }\n      }\n    }\n\n    return (\n      <Container visible={visible}>\n        {suggestionElements.map((btn, index) => (\n          <Btn\n            size=\"small\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            key={`${btn.id}-btn${index}`}\n            visible={btn.visible.toString()}\n            onClick={() => sendQuickReply(btn.label)}\n          >\n            {btn.label}\n          </Btn>\n        ))}\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    visible: state.buttonBar.visible,\n    messages: state.conversation.messages,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendQuickReply: text => {\n      dispatch(sendQuickReply(text))\n    },\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ButtonBar)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/ButtonBar.js","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport red from '@material-ui/core/colors/red'\n\nconst Container = styled.div`\n  grid-area: errorbar;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  align-items: center;\n  padding: ${p => (p.visible ? '24px 16px' : '0 16px')};\n  background: ${red[300]};\n  border-top: ${p => (p.visible ? `1px solid ${red[500]}` : 'none')};\n  color: ${red[700]};\n`\n\nclass ErrorBar extends PureComponent {\n  render() {\n    const { error } = this.props\n    return <Container visible={error !== ''}>{error}</Container>\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error,\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {}\n// }\n\nexport default connect(mapStateToProps)(ErrorBar)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/ErrorBar.js","/* eslint-disable no-param-reassign */\nimport { css } from 'styled-components'\n\nconst sizes = {\n  giant: 1170,\n  desktop: 992,\n  tablet: 768,\n  phone: 620,\n}\n\n// iterate through the sizes and create a media template\nexport const media = Object.keys(sizes).reduce((accumulator, label) => {\n  // use em in breakpoints to work properly cross-browser and support users\n  // changing their browsers font-size: https://zellwk.com/blog/media-query-units/\n  const emSize = sizes[label] / 16\n  accumulator[label] = (...args) => css`\n    @media (max-width: ${emSize}em) {\n      ${css(...args)};\n    }\n  `\n  return accumulator\n}, {})\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/styles/media.js","import React, { PureComponent } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport styled, { css } from 'styled-components'\nimport { connect } from 'react-redux'\nimport grey from '@material-ui/core/colors/grey'\nimport Header from './Header'\nimport PrivacyPolicy from './PrivacyPolicy'\nimport ChatWindow from './ChatWindow'\nimport UserInput from './UserInput'\nimport ButtonBar from './ButtonBar'\nimport ErrorBar from './ErrorBar'\nimport { media } from './styles/media'\n\nconst Container = styled(Paper)`\n  && {\n    width: 400px;\n    height: 600px;\n    overflow: hidden;\n    position: absolute;\n    bottom: 48px;\n    right: 48px;\n    transition: width 120ms ease-in-out, height 150ms ease-in-out;\n    pointer-events: none;\n    ${props =>\n      props.fullscreen &&\n      css`\n        width: calc(100% - 96px);\n        height: calc(100% - 96px);\n      `};\n    ${props =>\n      !props.visible &&\n      css`\n        width: 0;\n        height: 0;\n      `};\n\n    ${media.phone`\n    width: ${props => (props.visible ? 'calc(100% - 96px)' : '0')};\n    height: ${props => (props.visible ? 'calc(100% - 96px)' : '0')};\n    max-width: none;\n    max-height: none;\n  `};\n  }\n`\n\nconst OuterFrame = styled.div`\n  && {\n    width: 100%;\n    height: 100%;\n    transform-origin: bottom right;\n    pointer-events: auto;\n    background: ${grey[100]};\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 64px 1fr auto 0px 48px;\n    grid-template-areas:\n      'header'\n      'chatwindow'\n      'buttonbar'\n      'errorbar'\n      'userinput';\n  }\n`\n\nclass ChatContainer extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.containerRef = React.createRef()\n  }\n  render() {\n    const { windowVisible, fullscreen } = this.props\n    return (\n      <Container\n        elevation={4}\n        fullscreen={fullscreen ? 1 : 0}\n        visible={windowVisible ? 1 : 0}\n      >\n        <OuterFrame ref={this.containerRef}>\n          <Header />\n          <PrivacyPolicy parentRef={this.containerRef.current} />\n          <ChatWindow />\n          <ButtonBar />\n          <ErrorBar />\n          <UserInput />\n        </OuterFrame>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    windowVisible: state.config.windowVisible,\n    fullscreen: state.config.fullscreen,\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {}\n// }\n\nexport default connect(mapStateToProps)(ChatContainer)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/ChatContainer.js","import * as t from '../actions/actionTypes'\n\nconst initialState = {\n  avatar: null,\n  title: 'Chat Window',\n  windowVisible: false,\n  fullscreen: false,\n  privacyPolicyVisible: false,\n  privacyPolicy:\n    'Please do not enter any personally identifiable information such as SSN, Date of Birth, Case Number or last name.',\n}\nfunction config(state = initialState, action) {\n  switch (action.type) {\n    case t.HIDE_PRIVACY_POLICY:\n      return { ...state, privacyPolicyVisible: false }\n\n    case t.SHOW_PRIVACY_POLICY:\n      return { ...state, privacyPolicyVisible: true }\n\n    case t.SET_PRIVACY_POLICY:\n      return { ...state, privacyPolicy: action.policyText }\n\n    case t.SET_AVATAR:\n      return { ...state, avatar: action.avatar }\n\n    case t.SET_TITLE:\n      return { ...state, title: action.title }\n\n    case t.SHOW_WINDOW:\n      return { ...state, windowVisible: true }\n\n    case t.HIDE_WINDOW:\n      return { ...state, windowVisible: false }\n\n    case t.FULLSCREEN:\n      return { ...state, fullscreen: true }\n\n    case t.WINDOWED:\n      return { ...state, fullscreen: false }\n\n    default:\n      return state\n  }\n}\n\nexport default config\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/reducers/configReducer.js","import { parse, format, differenceInMilliseconds } from 'date-fns'\nimport * as t from '../actions/actionTypes'\nimport { sysTimeFormat } from '../config/dateFormats'\n\nconst initialState = {\n  client: null,\n  clientName: null,\n  messages: [],\n  webhookPayload: null,\n  lastUpdateTime: format(new Date(), sysTimeFormat),\n  currentTime: format(new Date(), sysTimeFormat),\n  headerTime: 'Now',\n  timer: null,\n  conversationStarted: false,\n}\nfunction conversation(state = initialState, action) {\n  switch (action.type) {\n    case t.SAVE_CLIENT:\n      return { ...state, client: action.client, clientName: action.clientName }\n\n    case t.UPDATE_CURRENT_TIME:\n      return {\n        ...state,\n        headerTime: action.headerTime,\n        currentTime: action.currentTime,\n      }\n\n    case t.TIMER_START:\n      return {\n        ...state,\n        timer: action.timer,\n      }\n\n    case t.INITIATE_LOADING:\n      return {\n        ...state,\n        messages: [\n          ...state.messages,\n          {\n            loading: true,\n            entity: 'bot',\n            systemTime: format(new Date(), sysTimeFormat),\n          },\n        ],\n      }\n\n    case t.SAVE_RESPONSE:\n      return {\n        ...state,\n        lastUpdateTime: format(new Date(), sysTimeFormat),\n        headerTime: 'Now',\n        messages: action.newConversationArray,\n      }\n\n    case t.SAVE_USER_RESPONSE:\n      return {\n        ...state,\n        lastUpdateTime: format(new Date(), sysTimeFormat),\n        headerTime: 'Now',\n        messages: [...state.messages, action.response].sort((a, b) => {\n          const dateA = parse(\n            a.systemTime,\n            sysTimeFormat,\n            new Date(a.systemTime)\n          )\n          const dateB = parse(\n            b.systemTime,\n            sysTimeFormat,\n            new Date(b.systemTime)\n          )\n          const diff = differenceInMilliseconds(dateB, dateA)\n          return diff\n        }),\n      }\n\n    case t.RECEIVE_WEBHOOK_DATA:\n      return {\n        ...state,\n        webhookPayload: action.webhookPayload,\n      }\n\n    case t.SET_CONVERSATION_STARTED:\n      return {\n        ...state,\n        conversationStarted: true,\n      }\n\n    case t.SET_CONVERSATION_ENDED:\n      return {\n        ...state,\n        conversationStarted: false,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default conversation\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/reducers/conversationReducer.js","import * as t from '../actions/actionTypes'\n\nconst initialState = {\n  visible: false,\n  buttons: [],\n}\nfunction config(state = initialState, action) {\n  switch (action.type) {\n    case t.SHOW_BUTTON_BAR:\n      return {\n        ...state,\n        visible: true,\n      }\n    case t.HIDE_BUTTON_BAR:\n      return {\n        ...state,\n        visible: false,\n      }\n    default:\n      return state\n  }\n}\n\nexport default config\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/reducers/buttonBarReducer.js","import * as t from '../actions/actionTypes'\n\nconst initialState = ''\nfunction config(state = initialState, action) {\n  switch (action.type) {\n    case t.DISPLAY_ERROR:\n      return action.error\n\n    case t.CLEAR_ERROR:\n      return initialState\n\n    default:\n      return state\n  }\n}\n\nexport default config\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/reducers/errorReducer.js","import { combineReducers } from 'redux'\nimport config from './configReducer'\nimport conversation from './conversationReducer'\nimport buttonBar from './buttonBarReducer'\nimport userInput from './userInputReducer'\nimport error from './errorReducer'\n\nconst rootReducer = combineReducers({\n  config,\n  conversation,\n  buttonBar,\n  userInput,\n  error,\n})\nexport default rootReducer\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/reducers/rootReducer.js","import * as t from '../actions/actionTypes'\n\nconst initialState = ''\nfunction userInput(state = initialState, action) {\n  switch (action.type) {\n    case t.SAVE_USER_INPUT:\n      return action.value\n\n    default:\n      return state\n  }\n}\n\nexport default userInput\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/reducers/userInputReducer.js","import { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport React, { PureComponent } from 'react'\nimport styled from 'styled-components'\nimport WebFont from 'webfontloader'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\nimport thunkMiddleware from 'redux-thunk'\nimport 'whatwg-fetch'\nimport grey from '@material-ui/core/colors/grey'\nimport createTheme from './createTheme'\nimport ActivatorButton from './ActivatorButton'\nimport ChatContainer from './ChatContainer'\nimport rootReducer from './reducers/rootReducer'\nimport { initialize } from './actions/initialization'\n\nWebFont.load({\n  google: {\n    families: ['Roboto:300,400,500', 'Product Sans:400'],\n  },\n})\n\nconst OuterContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 999999;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  box-sizing: border-box;\n  font-family: 'Roboto', sans-serif;\n  line-height: normal; /*For WordPress*/\n  & > * {\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n\n    & ::-webkit-scrollbar-thumb {\n      background-color: ${grey[600]};\n      -webkit-border-radius: 8px;\n      border-radius: 8px;\n      border: 2px solid ${grey[100]};\n    }\n    & ::-webkit-scrollbar {\n      background-color: ${grey[100]};\n      width: 8px;\n    }\n  }\n`\n\nclass ChatFrame extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n    this.currentValue = null\n    this.theme = createTheme(this.props.primaryColor, this.props.secondaryColor)\n  }\n  componentDidMount() {\n    // We load the initial options into the Redux store inside of the\n    // componentDidMount() lifecycle hook. This lets us use Redux to manage\n    // state instead of passing props down manually.\n    this.store.dispatch(initialize(this.props, this.theme))\n\n    // In order to expose when a webhook payload of custom data is received,\n    // we manually create a subscription to the data piece we want to expose\n    this.unsubscribe = this.store.subscribe(() => this.handleChange(this.store))\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe()\n  }\n\n  // Select the current conversation payload from our Redux store\n  select(state) {\n    return state.conversation.webhookPayload\n  }\n\n  // When props are updated (e.g. Theme changes), update entire component\n  handleChange(store) {\n    const previousValue = this.currentValue\n    this.currentValue = this.select(store.getState())\n    if (previousValue !== this.currentValue && this.props.onPayload) {\n      this.props.onPayload(this.currentValue)\n    }\n  }\n\n  render() {\n    return (\n      <Provider store={this.store}>\n        <MuiThemeProvider theme={this.theme}>\n          <OuterContainer>\n            <ChatContainer />\n            <ActivatorButton />\n          </OuterContainer>\n        </MuiThemeProvider>\n      </Provider>\n    )\n  }\n}\n\nexport default ChatFrame\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/ChatFrame.js","import ChatFrame from './ChatFrame'\n\nexport default ChatFrame\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chatframe/index.js","module.exports = require(\"webfontloader\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"webfontloader\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"@material-ui/core/Paper\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/core/Paper\"\n// module id = 24\n// module chunks = 0"],"sourceRoot":""}